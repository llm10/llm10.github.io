{"s":"Grok","m":"grok-3-mini","t":1751527902,"r":[["u","t","are there any phones that use open hardware designs, as well as all open source software"],["a","t","Based on available information up to 2025, there are a few phones that aim for open hardware designs and fully open source software, but achieving both completely is challenging due to dependencies on proprietary components like baseband modems. Here's a summary of the most relevant options:\n\n- **Librem 5 (by Purism)**: This phone features open hardware designs, including user-replaceable components and hardware kill switches for cameras and microphones. It runs fully open source software, such as PureOS (a Debian-based OS), and emphasizes privacy and modularity. However, it still includes some proprietary elements in its hardware, like the cellular modem. Information from Purism's website highlights its focus on open governance and transparency.\n\n- **PinePhone**: Developed by Pine64, this phone uses open hardware designs based on community contributions, with schematics and designs publicly available. It supports fully open source software, including operating systems like postmarketOS, Ubuntu Touch, or Manjaro, all built on Linux. It's noted in community discussions for being hackable, though hardware specs are often basic compared to mainstream phones, and it may rely on proprietary firmware for certain features.\n\nOther devices, like those running GrapheneOS (e.g., on Google Pixel hardware), offer fully open source software but do not have open hardware designs, as the underlying components are proprietary. Posts on X reflect ongoing interest in these options, with users praising their potential for privacy and customization, though they often point out limitations in real-world usability.\n\nNo phone fully achieves 100% open hardware and software due to industry constraints, but Librem 5 and PinePhone are the closest based on current sources."],["u","t","what is richard stallmans role in fsf today"],["a","t","As of 2025, based on recent information from sources like the FOSS Force article discussing \"post-Stallman changes\" at the Free Software Foundation, Richard Stallman is no longer in a formal leadership role such as president or board chair. He resigned from these positions in 2019 amid controversies and was briefly reinstated to the board in 2021, according to historical reports. However, by 2025, the FSF appears to have moved forward without him in an active capacity, focusing on new directions as described in recent discussions. Posts on platforms like X mention his past involvement but are inconclusive and should not be treated as definitive evidence. For the most accurate updates, refer to the FSF's official communications."]]}