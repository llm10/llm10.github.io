{"s":"Grok","m":"grok-3-mini","t":1751618069,"r":[{"role":"u","text":"did Japan and India sign more loosening of visas in 2025?"},{"role":"a","text":"Based on available information from the Ministry of Foreign Affairs of Japan and related sources, Japan has implemented a reduction in visa fees for Indian travelers, lowering the fee from \u20b9500 to \u20b9450 for single or multiple entries starting April 1, 2025, while keeping the transit visa fee at \u20b950. This change, as indicated in posts on X, represents a form of visa loosening by making travel more affordable. However, there is no confirmed evidence of a new formal agreement between Japan and India specifically signed in 2025 for additional visa relaxations beyond this fee adjustment. Information from X posts should be treated as inconclusive and not as official verification. For the latest details, refer to the Embassy of Japan in India or the Ministry of Foreign Affairs website.","sources":["https:\/\/www.mofa.go.jp\/j_info\/visit\/visa\/index.html","https:\/\/www.us.emb-japan.go.jp\/itpr_en\/travel_and_visa.html","https:\/\/www.in.emb-japan.go.jp\/itpr_en\/visa.html","https:\/\/en.wikipedia.org\/wiki\/Visa_policy_of_Japan","https:\/\/www.vfsglobal.com\/one-pager\/japan\/india\/delhi\/index.html","https:\/\/timesofindia.indiatimes.com\/technology\/tech-news\/us-immigration-authority-to-visa-applicants-effective-july-1-2025-uscis-will-no-longer-send-\/articleshow\/122119361.cms","https:\/\/timesofindia.indiatimes.com\/world\/rest-of-world\/japan-invokes-national-interest-as-tariff-talks-with-us-struggle\/articleshow\/122215832.cms","https:\/\/timesofindia.indiatimes.com\/education\/news\/ibps-hindi-officer-recruitment-2025-application-begins-direct-link-to-apply-for-the-posts-here\/articleshow\/122201241.cms","https:\/\/ph.usembassy.gov\/announcement-for-j-visa-applicants","https:\/\/indiashippingnews.com\/us-vietnam-trade-deal-offers-cautionary-lessons-for-india-gtri-report\/","https:\/\/x.com\/hindookissinger\/status\/1853106264479273050","https:\/\/x.com\/ankitatIIMA\/status\/1912433812778238440","https:\/\/x.com\/Kenu73\/status\/1774671144316252466","https:\/\/x.com\/outofofficedaku\/status\/1904555879279861877","https:\/\/x.com\/ankitatIIMA\/status\/1890815927962464571"]},{"role":"u","text":"how old is the russian section of beijing an how did it come about"},{"role":"a","text":"The \"Russian section\" in Beijing likely refers to areas with historical Russian influence, such as the diplomatic quarter or commercial districts like Yabaolu. Based on historical records, the formal Russian presence began with the establishment of the first permanent Russian diplomatic mission in Beijing in 1861, making it approximately 164 years old as of 2025.\n\nIts origins trace back to earlier interactions in the 17th century, when Russian prisoners from Sino-Russian border conflicts were brought to the region, leading to a small Orthodox Christian community. This presence expanded in the 19th century due to treaties like the Treaty of Peking (1860), which formalized Russian interests in China amid territorial expansions. By the 20th century, it grew through diplomatic, trade, and cultural exchanges, including the establishment of venues like the Moscow Restaurant in 1954 to promote Sino-Soviet friendship. Sources include historical accounts from Wikipedia and related posts on X.","sources":["https:\/\/en.wikipedia.org\/wiki\/History_of_Beijing","https:\/\/en.wikipedia.org\/wiki\/Russians_in_China","https:\/\/en.wikipedia.org\/wiki\/Embassy_of_Russia,_Beijing","https:\/\/apics-online.info\/surveys\/65","https:\/\/en.wikipedia.org\/wiki\/Beijing","https:\/\/kyivindependent.com\/chinas-foreign-minister-tells-eu-that-beijing-cannot-afford-russian-loss-in-ukraine-media-reports-6-2025\/","https:\/\/nytimes.com\/2025\/06\/30\/world\/europe\/russia-china-culture.html","https:\/\/www.memri.org\/reports\/russia-beijing-umbrella-hide-under-bad-weather","https:\/\/independent.co.uk\/asia\/china\/russia-china-putin-xi-jinping-ukraine-war-b2727992.html","https:\/\/www.scmp.com\/topics\/china-russia-relations","https:\/\/x.com\/tongbingxue\/status\/1638053452550127617","https:\/\/x.com\/InfoAgeStrategy\/status\/1642587617526001665","https:\/\/x.com\/shen_shiwei\/status\/1278599157305847808","https:\/\/x.com\/razibkhan\/status\/1940061417505210670","https:\/\/x.com\/CTankie1917\/status\/1939797117918486781"]}]}