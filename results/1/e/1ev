{"s":"Gemini","m":"gemini-2.5-flash","t":1752738999,"r":[{"role":"u","text":"does isaigh have a verse similar to john 16:25 (kjv)"},{"role":"a","text":"John 16:25 (KJV) states: \"These things have I spoken unto you in proverbs: but the time cometh, when I shall no more speak unto you in proverbs, but I shall shew you plainly of the Father.\" This verse highlights a transition from speaking in obscure figures of speech to a clear, plain revelation of the Father.\n\nWhile Isaiah does not have a direct parallel verse that exactly mirrors the \"proverbs now, plain speaking later about the Father\" structure of John 16:25, it contains similar themes related to understanding and future revelation:\n\n*   **Speaking in Parables\/Obscurity:** Isaiah 6:9-10, cited in the New Testament (e.g., Matthew 13:14), describes a situation where people \"keep on listening, but shall not understand; and you shall keep on looking, but shall not perceive.\" This indicates a period where understanding is withheld or obscured, similar to speaking in parables.\n*   **Future Understanding and Revelation:** Isaiah's prophecies often speak of a future time when understanding will be clear, or when God will reveal things plainly.\n    *   Isaiah contains prophecies of a \"Day of Jehovah\" or \"Day of the Lord\" when judgment and revelation will occur.\n    *   The book of Isaiah also describes a future where the Messiah will establish God's Kingdom and create a \"new Jerusalem,\" implying a time of clear understanding and restoration.\n    *   Isaiah 46:10 mentions God declaring \"the end from the beginning, from ancient times, what is still to come,\" suggesting a divine plan that will ultimately be revealed and understood.\n    *   Daniel 12:8-9, a related Old Testament prophecy, speaks of words that are \"closed and sealed till the time of the end,\" implying that future understanding will clarify previously hidden truths.\n\nIn essence, while Isaiah doesn't use the exact phrasing of John 16:25, it prophesies a period of obscured understanding followed by a future revelation and clear discernment, aligning with the broader theme of the New Testament verse.","sources":["https:\/\/bible.knowing-jesus.com\/topics\/Speaking","https:\/\/thebiblespeakstoyou.com\/why-did-jesus-talk-in-parables\/","https:\/\/www.biblegateway.com\/passage\/?search=Matthew%2013%2CIsaiah%206&version=NASB","https:\/\/messianicpublishing.com\/wp-content\/uploads\/2015\/01\/TMF_SettingTable_3.pdf","https:\/\/www.google.com\/search?q=Isaiah+understanding+revealed+clearly+future&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"what does quran say about \"people of the book\" and christians being good"},{"role":"a","text":"The Quran generally refers to Christians, along with Jews and Sabians, as \"People of the Book\" (Ahl al-Kit\u0101b), acknowledging that they have received divine revelations through holy scriptures. The Quran's stance on \"People of the Book\" and Christians is nuanced, containing both commonalities and theological distinctions.\n\nRegarding Christians being \"good,\" the Quran presents several positive statements:\n*   **Reward for Belief and Good Deeds:** Several verses state that \"whoever believes in God and the Last Day and does good, they shall have their reward from their Lord. And there will be no fear for them, nor shall they grieve\" (Quran 2:62 and 5:69). This applies to \"those who believe, and those who are Jews, and the Christians, and the Sabians,\" indicating that salvation is not exclusive to Muslims but depends on true belief and righteous actions.\n*   **Nearness in Love to Believers:** Quran 5:82 states: \"...and nearest among them in love to the believers will you find those who say, 'We are Christians,' because amongst these are men devoted to learning and men who have renounced the world, and they are not arrogant.\" This verse highlights positive qualities like devotion to learning, humility, and spiritual renunciation among Christians.\n*   **Commonalities and Shared Prophets:** Islam acknowledges that Jesus is a messenger of God and was born to the Virgin Mary, beliefs shared with Christianity. The Quran emphasizes these commonalities and aims to foster dialogue and tolerance.\n\nHowever, the Quran also expresses theological differences, particularly concerning the Christian doctrine of the Holy Trinity and the worship of Jesus Christ as God. From an Islamic perspective, worshipping any historical figure as God is considered sacrilege and polytheism. For instance, Quran 5:17 states, \"In blasphemy indeed are those that say that God is Christ the son of Mary\". Some verses also indicate that while there is \"a party on the right course,\" \"many of them follow a course that is evil\" (Quran 5:66).\n\nIn summary, the Quran acknowledges Christians as \"People of the Book\" and recognizes positive attributes and a path to reward for those who believe in God and the Last Day and do good deeds. At the same time, it critiques core Christian doctrines such as the Trinity and the divinity of Jesus from an Islamic monotheistic perspective.","sources":["https:\/\/www.learnreligions.com\/what-does-the-quran-say-about-christians-2003785","https:\/\/en.wikipedia.org\/wiki\/People_of_the_Book","https:\/\/www.reddit.com\/r\/DebateReligion\/comments\/1hppegr\/the_qurans_unclear_stance_on_the_people_of_the\/","http:\/\/www.quransmessage.com\/articles\/people%20of%20the%20book%20FM3.htm","https:\/\/www.google.com\/search?q=Quran+people+of+the+book+Christians+good&client=app-vertex-grounding&safesearch=active"]}]}