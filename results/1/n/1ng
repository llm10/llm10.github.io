{"s":"Gemini","m":"gemini-2.5-flash","t":1753351419,"r":[{"role":"u","text":"compare military hardware of Cambodia and Thailand in 2025"},{"role":"a","text":"In 2025, Thailand possesses a significantly larger and more technologically advanced military compared to Cambodia, with a substantial advantage in defense budget, air power, and naval capabilities. Cambodia, while having a comparable number of tanks, focuses more on ground-based firepower, particularly with a notable number of rocket projectors.\n\n**Defense Budget and Personnel:**\n*   **Thailand:** Has a defense budget of approximately $5.89 billion USD. Its military comprises 360,850 active-duty personnel, 221,000 reserves, and 25,000 paramilitary forces.\n*   **Cambodia:** Operates with a defense budget of around $860 million USD. Its forces include 221,000 active-duty personnel and 10,000 paramilitary personnel.\n\n**Ground Forces:**\n*   **Tanks:** Cambodia slightly outnumbers Thailand in tanks, with 644 units compared to Thailand's 635. Thailand's Royal Thai Army (RTA) has acquired 60 VT-4 main battle tanks from China by 2023 and is looking to procure new tanks.\n*   **Armored Fighting Vehicles (AFVs):** Thailand holds a significant advantage with 16,935 AFVs, while Cambodia has 3,627. Thailand received 111 VN-1 armored infantry fighting vehicles from China by 2021.\n*   **Artillery:** Thailand has more self-propelled artillery (50 units vs. 30 for Cambodia) and towed artillery (589 units vs. 430 for Cambodia). Cambodia, however, has a \"substantial number\" of rocket projectors (66 units compared to Thailand's 26), indicating a focus on ground-based firepower.\n\n**Air Force:**\n*   **Total Aircraft:** Thailand's air force is considerably larger with 493 aircraft, whereas Cambodia has 25.\n*   **Fighter Jets:** Thailand possesses 72 fighter jets, including F-16s and Gripens, while Cambodia has none.\n*   **Attack Aircraft:** Thailand's RTA began receiving eight US Boeing AH-6 Little Bird light attack helicopters in 2024 and is seeking modern attack helicopters. Cambodia has 4 attack aircraft.\n*   **Drones:** Thailand has a focus on acquiring cutting-edge drones and was the first international purchaser of four Chinese-made military drones in 2023. Cambodia's \"Golden Dragon 2025\" exercise with China involves reconnaissance and attack drones.\n*   **Helicopters:** Thailand has 154 helicopters, while Cambodia has 21.\n\n**Navy:**\n*   **Naval Assets:** Thailand maintains a more robust navy, including 1 helicopter carrier, 7 frigates, and is pursuing a submarine procurement project. Thailand has 29 submarines. Cambodia does not possess helicopter carriers, frigates, or corvettes. Cambodia has 45 patrol craft.\n\n**Modernization and Procurement:**\n*   **Thailand:** The Royal Thai Army's \"RTA 5.0\" vision (2025-2037) aims for a \"powerful, modern army\" and seeks state-of-the-art equipment including modern attack and patrol helicopters, tanks, armored vehicles, transport aircraft, cutting-edge drones, territorial monitoring systems, communication\/intelligence hardware, and advanced radar. Thailand procures military hardware from various international sources, including China, the US, Germany, Russia, Sweden, and the UK.\n*   **Cambodia:** Is exploring purchasing Chinese and European vehicles and equipment to reduce its reliance on older Warsaw Pact military gear. Cambodia also ordered the destruction or reservation of all US-origin military equipment in response to a US embargo in 2021. Cambodia participates in the \"Golden Dragon 2025\" joint military exercise with China, which involves modern weapons, robotic dogs, and artificial intelligence integration.","sources":["https:\/\/www.nationthailand.com\/news\/general\/40050940","https:\/\/www.khmertimeskh.com\/501673929\/cambodia-china-to-hold-golden-dragon-2025-military-exercises\/","https:\/\/www.globalfirepower.com\/country-military-strength-detail.php?country_id=cambodia","https:\/\/www.khmertimeskh.com\/501684242\/cambodia-and-china-kick-off-golden-dragon-2025-military-drills\/","https:\/\/en.wikipedia.org\/wiki\/List_of_equipment_of_the_Royal_Cambodian_Army","https:\/\/www.google.com\/search?q=Thailand+military+hardware+2025&client=app-vertex-grounding&safesearch=active"]}]}