{"s":"Gemini","m":"gemini-2.5-pro","t":1753786511,"r":[{"role":"u","text":"increase of South Asian workers in Japan in the past 3 years"},{"role":"a","text":"Over the past three years, Japan's foreign resident population has grown by approximately 1 million people. As of 2024, the number of foreign residents reached a record high of 3.77 million, which was an increase of 10.5% from the previous year, with a notable rise in workers from South and Southeast Asia.\n\nAs of October 2024, the total number of foreign workers in Japan hit a new record of 2.3 million, a 12.4% increase from the prior year. This was the largest year-on-year jump since tracking began in 2008.\n\nWhile the largest groups of foreign workers are from Vietnam, China, and the Philippines, some of the most significant year-on-year increases in the workforce have come from other nations, including the South Asian country of Sri Lanka, which saw a 33.7% increase. This recent migration from South Asia to Japan has been marked by a \"spectacular rise in numbers.\"\n\nThe primary driver for this increase is Japan's effort to address growing labor shortages resulting from its aging population. The manufacturing, hospitality, and retail sectors employ the largest numbers of foreign workers.","sources":["https:\/\/www.ngj.jp\/press_detail.php?article_id=1721","https:\/\/www.nippon.com\/en\/japan-data\/h02312\/","https:\/\/e.vnexpress.net\/news\/news\/japan-records-biggest-jump-in-foreign-workers-4844624.html","https:\/\/archive.biiss.org\/web\/uploads\/documents\/202111\/1313\/12\/904b9952c9ed3cbc4332d79d5050b46e.pdf","https:\/\/www.google.com\/search?q=increase+of+South+Asian+workers+in+Japan+in+the+past+3+years&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"how many more pakistanis have become residents in japan"},{"role":"a","text":"Based on available data, here's a look at the change in the number of Pakistani residents in Japan: \n\n * **2024:** There were 29,647 registered Pakistani residents in Japan as of December 2024. \n * **2023:** The number of Pakistani nationals residing in Japan was 25,334. \n\n This indicates an increase of 4,313 Pakistani residents between 2023 and 2024. \n\n It's worth noting that in June 2023, it was reported that over 5,000 Pakistanis had registered in Japan for various purposes, including employment, education, and business, over the preceding 10 months. This suggests a significant influx of Pakistanis into Japan during that period.","sources":["https:\/\/en.wikipedia.org\/wiki\/Pakistanis_in_Japan","https:\/\/www.mofa.go.jp\/region\/asia-paci\/pakistan\/data.html","https:\/\/www.thenews.com.pk\/print\/1077457-number-of-pakistanis-arriving-in-japan-hits-all-time-high-authorities","https:\/\/www.google.com\/search?q=number+of+Pakistani+residents+in+Japan+over+the+past+3+years&client=app-vertex-grounding&safesearch=active"]}]}