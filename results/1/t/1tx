{"s":"Grok","m":"grok-3-mini","t":1754030216,"r":[{"role":"u","text":"tell me about the scandal in the late 80's in the us, where minor age male escorts went to the white house"},{"role":"a","text":"In the late 1980s, specifically in 1989, a scandal emerged in the United States involving allegations of a male prostitution ring with ties to the White House during the Reagan and Bush administrations. This case, often referred to as the \"White House call boy scandal\" or linked to the broader Franklin Credit Union affair, centered on claims that underage male escorts were involved in sexual activities with high-profile figures.\n\nKey details include:\n\n- **The Washington Times Report**: On June 29, 1989, the newspaper published an article by reporters Paul M. Rodriguez and George Archibald, revealing a homosexual prostitution operation allegedly run out of a house on Capitol Hill in Washington, D.C. The ring was said to have provided services to prominent individuals, including government officials, and involved minors as young as 15.\n\n- **Craig Spence's Role**: Lobbyist Craig Spence was a central figure. He organized extravagant parties and had arranged late-night White House tours for his associates, which reportedly included young male escorts. Spence claimed connections to intelligence agencies and boasted about his influence, but he was later investigated for these activities.\n\n- **Allegations of White House Involvement**: The scandal suggested that minors were brought to the White House and other elite locations for sexual encounters. This tied into wider accusations of a pedophile network, with some claims linking it to the Franklin Credit Union scandal in Omaha, Nebraska, where Lawrence E. King Jr., a Republican operative, was accused of running a child prostitution ring that extended to Washington.\n\n- **Investigations and Outcomes**: The story prompted investigations by the U.S. Secret Service, the Metropolitan Police Department, and other agencies. However, many leads were not pursued aggressively, and the case largely fizzled out. Spence was found dead in a Boston hotel room in November 1989, ruled a suicide, which fueled conspiracy theories. No high-profile convictions directly resulted from the White House aspects, though some lower-level figures faced charges related to prostitution.\n\nThe scandal remains controversial, with some viewing it as evidence of a cover-up, while others dismiss it as unsubstantiated or exaggerated. It contributed to public distrust in government during that era."}]}