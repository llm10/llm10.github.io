{"s":"Gemini","m":"gemini-2.5-flash","t":1754836750,"r":[{"role":"u","text":"average salary for canadian cell phone tower climber"},{"role":"a","text":"The average salary for a cell phone tower climber in Canada varies by source and location. The average hourly pay for a Telecommunications Tower Climber in Canada is CA$22, with 25% earning around CA$19.50 and 75% earning around CA$24.11.\n\nMore specifically, as of July 2025:\n*   In Manitoba, the average hourly pay for a Cell Phone Tower Climber is $21.36.\n*   In Ontario, the average hourly pay for a Cell Tower job is $27.20.","sources":["https:\/\/www.payscale.com\/research\/CA\/Job=Telecommunications_Tower_Climber\/Hourly_Rate","https:\/\/www.ziprecruiter.com\/Salaries\/Cell-Phone-Tower-Climber-Salary--in-Manitoba","https:\/\/www.ziprecruiter.com\/Salaries\/Cell-Tower-Salary--in-Ontario","https:\/\/www.google.com\/search?q=average+salary+for+canadian+cell+phone+tower+climber&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"best paying high hazard climbing jobs like cell phone climber but you get rich"},{"role":"a","text":"If you're looking for high-hazard climbing jobs with the potential to earn a significant income, beyond cell phone tower climbing, consider the following professions:\n\n*   **Structural Iron and Steel Workers** These professionals are responsible for constructing the frameworks of buildings, bridges, and roads. The job involves significant risks, including falls from great heights. However, ironworkers often command six-figure incomes.\n*   **Power-line Installers \/ Repairers (Linemen)** Linemen work on live electrical lines and power towers, often at extreme heights and in challenging weather conditions. The dangers include electrocution and falls, but experienced linemen can earn well into six figures, especially with overtime and hazard pay. Some even work directly on live lines.\n*   **Transmission Tower Climbers** Similar to cell phone tower climbers, these individuals ascend and descend tall transmission towers (up to 180 feet or 55 meters) for maintenance and repair without the aid of machines or buckets. While highly dangerous due to potential equipment malfunction and exhaustion, the compensation can be substantial depending on experience.","sources":["https:\/\/listverse.com\/2022\/11\/18\/10-most-dangerous-jobs-thatll-make-you-rich\/","https:\/\/dadisfire.com\/dangerous-jobs-that-pay-well\/","https:\/\/www.monster.com\/career-advice\/article\/high-paying-dangerous-jobs","https:\/\/www.forbes.com\/sites\/jackkelly\/2025\/04\/29\/five-of-the-hardest-scariest-and-most-dangerous-jobs-that-pay-well\/","https:\/\/www.google.com\/search?q=highest+paying+high+hazard+climbing+jobs&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"Transmission Tower Climbers salaries in canada"},{"role":"a","text":"The average salary for a Transmission Tower Climber in Canada is generally in the range of CA$22 per hour for Telecommunications Tower Climbers, with some variations based on location and experience.\n\nSpecifically:\n*   In Ontario, the average hourly pay for a Tower Technician is $23.39, with most salaries ranging from $19.23 to $26.44 per hour as of July 2025.\n*   In Manitoba, the average hourly pay for a Cell Phone Tower Climber (a related field with similar climbing duties) is $21.36 as of July 2025.\n\nWhile not specific to Canada, the median salary for a Transmission Tower Climber in the US was $56,000 per year ($26.92 per hour) in 2017. Overtime work can significantly boost annual earnings in this field.","sources":["https:\/\/www.payscale.com\/research\/CA\/Job=Telecommunications_Tower_Climber\/Hourly_Rate","https:\/\/www.ziprecruiter.com\/Salaries\/Tower-Technician-Salary--in-Ontario","https:\/\/www.ziprecruiter.com\/Salaries\/Cell-Phone-Tower-Climber-Salary--in-Manitoba","https:\/\/work.chron.com\/transmission-tower-climber-paid-5300.html","https:\/\/www.google.com\/search?q=Transmission+Tower+Climbers+salaries+Canada&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"$23.39 CAD full time salary"},{"role":"a","text":"To calculate a full-time annual salary based on an hourly rate of $23.39 CAD, we typically assume a 40-hour work week and 52 weeks in a year.\n\nHere's the calculation:\n\n$23.39 CAD\/hour * 40 hours\/week * 52 weeks\/year = **$48,651.20 CAD per year**"},{"role":"u","text":"average rate of lawn mower in canada"},{"role":"a","text":"The average rate for a lawn mower in Canada can refer to either the salary of a lawn mowing worker or the cost of lawn mowing services.\n\n**For Lawn Mowing Workers (Salary\/Hourly Rate):**\n\n*   People working as lawn-mowing workers in Canada typically earn between CA$16.00 and CA$27.00 per hour.\n*   The average annual salary for a Lawn Mower Operator in Canada is estimated to be around CA$60,127, or an equivalent hourly rate of CA$29, which can increase with experience.\n*   Another source indicates the average annual salary for a Lawn Mower in Canada is CA$35,100, with variations based on experience and company. Provincial averages can range from CA$41,791 in Manitoba to CA$79,855 in Yukon.\n*   In Ontario, the average hourly pay for a Lawn Mower is approximately CA$14.89, with most salaries ranging from CA$12.02 to CA$17.07 per hour.\n\n**For Lawn Mowing Services (Cost to Customer):**\n\n*   The average cost to hire a professional lawn mowing service for residential properties in Canada generally ranges from CA$25 to CA$100 per visit.\n*   Prices can vary depending on lawn size, complexity, and frequency of service, typically ranging from CA$30 to CA$150 per visit, with an average around CA$50 per session.\n*   For weekly service, the cost might be CA$25 to CA$55 per cut, while bi-weekly or one-time visits can be higher, from CA$65 to CA$100+.\n*   Some companies charge hourly rates, which typically range from CA$50 to CA$150+ per hour, especially for larger properties or comprehensive services that include trimming, edging, and cleanup.\n*   For larger rural properties, pricing is often calculated by the acre, averaging CA$150 to CA$300 per acre.","sources":["https:\/\/www.jobbank.gc.ca\/marketreport\/wages-occupation\/20216\/ca;jsessionid=30D7CE3614DF36FE0DA9216A0AB462D1.jobsearch75","https:\/\/www.jobbank.gc.ca\/marketreport\/wages-occupation\/20206\/ca","https:\/\/www.salaryexpert.com\/salary\/job\/lawn-mower-operator\/canada","https:\/\/www.jobillico.com\/salary\/job\/Lawn%20Mower","https:\/\/www.ziprecruiter.com\/Salaries\/Lawn-Mower-Salary--in-Ontario","https:\/\/www.google.com\/search?q=average+cost+lawn+mowing+service+Canada&client=app-vertex-grounding&safesearch=active"]}]}