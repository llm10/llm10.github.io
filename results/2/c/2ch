{"s":"Grok","m":"grok-3-mini","t":1755789274,"r":[{"role":"u","text":"explain the\u00a0 The Dukedom of Atholl"},{"role":"a","text":"The Dukedom of Atholl is a title in the Peerage of Scotland, created in 1703 for John Murray, 2nd Marquess of Atholl, as a reward for his support of the Act of Union between Scotland and England. It is one of the most senior Scottish peerages and has been held by the Murray family ever since.\n\nThe duke holds several subsidiary titles, including Marquess of Atholl, Earl of Atholl, Earl of Strathtay and Strathspey, Viscount of Balquhidder, Lord Murray, Balvany, and Gask. The family seat is Blair Castle in Perthshire, Scotland, which has been their residence since the 13th century.\n\nHistorically, the dukes played significant roles in Scottish politics and military affairs, such as supporting the Jacobite cause in the 18th century, though loyalties varied among family members. The current holder is Bruce Murray, 12th Duke of Atholl (born 1960), who inherited the title in 2012.\n\nA unique aspect is the Atholl Highlanders, a private ceremonial army maintained by the duke, which is the only legal private army in Europe. It participates in events like the annual Highland Games at Blair Castle."}]}