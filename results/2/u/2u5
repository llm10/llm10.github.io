{"s":"ChatGPT","m":"gpt-4o-mini","t":1757224518,"r":[{"role":"u","text":"show me the complete basic cod for gorillas"},{"role":"a","text":"The classic game \"Gorillas\" is a simple turn-based game where two players control gorillas that throw explosive bananas at each other from different buildings. The game was originally created in the early 1990s using QBasic. Below is a basic version of the code for the game:\n\n```basic\n' Gorillas.bas\nSCREEN 12\nDIM x(2), y(2), angle(2), power(2), xg(2), yg(2), g(2)\nDIM buildings(10)\n\n' Initialize buildings\nFOR i = 0 TO 10\n    buildings(i) = INT(RND * 200) + 50\nNEXT i\n\n' Main game loop\nDO\n    FOR player = 1 TO 2\n        CLS\n        PRINT \"Player \"; player; \"'s turn\"\n        DRAW_BUILDINGS\n        INPUT \"Enter angle (0-90): \", angle(player)\n        INPUT \"Enter power (1-100): \", power(player)\n        xg(player) = x(player)\n        yg(player) = y(player)\n        g(player) = 1\n        WHILE g(player) = 1\n            xg(player) = xg(player) + power(player) * COS(angle(player) * 3.14159 \/ 180)\n            yg(player) = yg(player) - power(player) * SIN(angle(player) * 3.14159 \/ 180) + 0.5\n            IF yg(player) >= 200 THEN\n                g(player) = 0\n                PRINT \"Player \"; player; \" missed!\"\n            END IF\n            IF xg(player) < 0 OR xg(player) > 640 THEN\n                g(player) = 0\n                PRINT \"Player \"; player; \" fell off the screen!\"\n            END IF\n            IF INT(xg(player)) = INT(x(3 - player)) AND INT(yg(player)) >= INT(y(3 - player)) THEN\n                g(player) = 0\n                PRINT \"Player \"; player; \" hit Player \"; 3 - player; \"!\"\n            END IF\n            SLEEP 1\n        WEND\n    NEXT player\nLOOP UNTIL FALSE\n\nSUB DRAW_BUILDINGS\n    FOR i = 0 TO 10\n        LINE (i * 64, 200)-(i * 64 + 64, 200 - buildings(i)), 15\n    NEXT i\nEND SUB\n```\n\nThis code is a very simplified version and may not run perfectly as-is. It serves as a basic framework for the game. You can expand upon it by adding features like scoring, better graphics, and more complex physics."}]}