{"s":"Grok","m":"grok-3-mini","t":1759435238,"r":[{"role":"u","text":"how do u make a computer to build a base in no man's sky?"},{"role":"a","text":"To build a base in No Man's Sky on a computer, follow these in-game steps:\n\n1. **Launch the game**: Ensure you have No Man's Sky installed on your PC via Steam, Epic Games Store, or another platform. Make sure your system meets the game's requirements (e.g., Windows OS, decent CPU\/GPU).\n\n2. **Start a game session**: Load your save file or start a new game. You'll need to be in the universe, preferably on a planet.\n\n3. **Access the build menu**: Open your inventory (default key: Tab on PC) and go to the \"Build\" section. You'll need resources like Carbon, Condensed Carbon, or other materials to craft building components.\n\n4. **Place a Base Computer**: From the build menu, select and place a Base Computer on the ground. This is the foundation for your base and requires specific resources (e.g., 40 Chromatic Metal and 40 Magnetized Ferrite).\n\n5. **Build structures**: Once the Base Computer is placed, you can use it to access the full building interface. Select and place items like walls, floors, storage, or refiners from the menu. Gather more resources by mining, scanning, or exploring.\n\n6. **Expand and manage**: Use the Base Computer to upload your base to the network (for multiplayer) and continue adding features. Remember, bases have limits based on your game's version and updates.\n\nIf you're referring to automating this with programming (e.g., scripts or mods), No Man's Sky doesn't officially support external automation, but community mods on sites like Nexus Mods might offer tools\u2014use them at your own risk, as they could violate game terms."},{"role":"u","text":"there ain't no  buidling menu in the inventory anymore get yer shit together it updated"},{"role":"a","text":"No Man's Sky has updated its UI, so the building menu isn't directly in the inventory anymore. Here's how to build a base in the current version:\n\n1. **Obtain a Base Computer**: Craft one using resources like 40 Chromatic Metal and 40 Magnetized Ferrite, or find one in the game.\n\n2. **Place the Base Computer**: Go to a suitable location on a planet, open your inventory (Tab), go to the \"Portable\" or \"Technology\" section, and deploy it on the ground.\n\n3. **Enter Build Mode**: Interact with the placed Base Computer (right-click or interact key). This opens the Build Mode interface.\n\n4. **Build structures**: In Build Mode, use the on-screen menu to select and place items like walls, floors, etc. You'll need resources in your inventory.\n\n5. **Exit and manage**: Exit Build Mode when done, and you can return to the Base Computer to continue expanding.\n\nIf you're still having issues, check the in-game tutorial or patch notes for your version."}]}