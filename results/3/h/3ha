{"s":"Gemini","m":"gemini-flash-latest","t":1759560866,"r":[{"role":"u","text":"Royal Medic cannabis strain. high cbd right"},{"role":"a","text":"Yes, the Royal Medic cannabis strain is considered a high-CBD strain.\n\nIt is generally known for having a high concentration of Cannabidiol (CBD), often in an approximate 1:1 ratio with its Tetrahydrocannabinol (THC) content.\n\nThe specific cannabinoid levels commonly reported are:\n*   **CBD:** Around 10% to 12% (though some sources suggest a range of 5% to 8%).\n*   **THC:** Around 10%.\n\nThis relatively equal ratio of THC to CBD provides a milder, more clear-headed effect compared to high-THC strains, as the CBD helps to temper the psychoactive effects of the THC.","sources":["https:\/\/www.pacificseedbank.com\/shop-all-marijuana-seeds\/high-cbd-marijuana-seeds\/royal-medic-feminized-marijuana-seeds\/","https:\/\/www.cannaconnection.com\/strains\/royal-medic","https:\/\/www.zativo.com\/royal-queen-seeds\/royal-medic?SID=1dsbg00k3lq6u87f6bqddc0e70","https:\/\/www.jerseyseedbank.com\/products\/royalmediccbd-feminzed-royalqueenseeds","https:\/\/www.royalqueenseeds.com\/blog-royal-medic-cbd-cannabis-seeds-n138","https:\/\/www.zamnesia.co.uk\/blog-strain-review-royal-medic-from-royal-queen-seeds-n1114","https:\/\/www.royalqueenseeds.com\/cbd-seeds\/148-royal-medic.html","https:\/\/www.google.com\/search?q=Royal+Medic+cannabis+strain+CBD+content&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Royal+Medic+cannabis+strain+THC+to+CBD+ratio&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"medical CBD production in romania"},{"role":"a","text":"Medical CBD production in Romania is subject to a complex regulatory framework, which distinguishes between industrial\/low-THC hemp and pharmaceutical-grade medical cannabis.\n\nHere is a breakdown of the status of medical CBD production:\n\n### **Legal Status and Regulations**\n\n*   **Medical Use is Legal (Conditional):** The use of cannabis for medical purposes is legal in Romania under Law no. 339\/2005, but only in the form of pharmaceutical products and under strict government supervision.\n*   **CBD Production:**\n    *   **Industrial Hemp\/CBD (THC < 0.2%):** Cultivation and processing of industrial hemp (Cannabis Sativa L. sub-specie Sativa) is allowed, provided the plants contain less than 0.2% Tetrahydrocannabinol (THC). This cultivation is mainly for fiber, seeds, oil, and research purposes. Farmers must obtain a special permit from the local Ministry of Agriculture and Rural Development (MARD) and submit samples for THC testing.\n    *   **Medical CBD\/Cannabis (Higher THC Content):** The cultivation of cannabis for *medical use* is possible with a permit from the Ministry of Agriculture, Forests and Rural Development, and the Ministry of Health issues authorizations for the purchase, distribution, and use of the products. These authorizations, however, are limited to specific needs, and in practice, authorities have historically been reluctant to issue them.\n*   **THC is a Controlled Substance:** THC is classified as a high-risk drug and is generally prohibited in products intended for consumption, regardless of concentration. **Full-spectrum CBD oils** (which contain trace amounts of THC, even below the 0.2% cultivation limit) are qualified as drugs and are only available by prescription from a pharmacy. Extracts with a THC concentration of no more than 0.2% are considered medicine and require a prescription.\n*   **Over-the-Counter CBD:** CBD products like oils, capsules, beverages, soaps, and creams that contain **no THC** or less than the 0.2% limit are available legally in health food stores and online as recreational products or food supplements.\n\n### **The Production Reality**\n\n*   **Industrial Hemp is Reviving:** Romania has a long history with hemp cultivation and was once a major European producer. The industry is experiencing a revival, with a growing number of crops each year. Romania is currently among the top five EU member states cultivating hemp.\n*   **Focus on Industrial Hemp:** The main variety of cannabis cultivated is *Cannabis Sativa L, sub-specie Sativa*, which has a naturally low THC content (under 0.2%). The production is primarily for **fiber, seeds, and oil**.\n*   **Medical Production is Limited\/Strict:** While the law allows for medical cultivation, the severe regulatory restrictions and the classification of any THC-containing extract as a controlled drug requiring a prescription and authorization make large-scale **pharmaceutical-grade medical CBD production (beyond the 0.2% THC industrial limit)** very difficult or practically non-existent for the domestic market, outside of specific licensed research or pharmaceutical activities. Many CBD products available in Romania are sourced from international vendors or importers.\n\n### **Recent Developments**\n\nThere have been draft laws aimed at establishing a clearer legal framework for medical cannabis, including the authorization and control of cultivation and processing for medical purposes by a proposed **Cannabis National Agency** under the Ministry of Health. However, as of available reports, these draft laws have been pending before the Chamber of Deputies.","sources":["https:\/\/cms.law\/en\/int\/expert-guides\/cms-expert-guide-to-a-legal-roadmap-to-cannabis\/romania","https:\/\/www.kinstellar.com\/locations\/news-deals-insights\/detail\/bucharest-romania\/898\/cannabis-for-medical-use-cee-regulatory-update","https:\/\/apps.fas.usda.gov\/newgainapi\/api\/Report\/DownloadReportByFileName?fileName=Romanian%20Industrial%20Hemp%20Market%20Overview%20_Bucharest_Romania_02-23-2020","https:\/\/hempking.eu\/en\/hemp-market-in-romania\/","https:\/\/premicanna.store\/en\/blog\/the-hemp-market-in-romania-1675467687.html","https:\/\/www.drhempme.ie\/europe\/cbd-oil-romania\/","https:\/\/foodlawlatest.com\/2020\/01\/10\/romania-takes-an-important-step-in-the-legalization-of-medical-cannabis\/","https:\/\/www.google.com\/search?q=CBD+industry+in+Romania+medical+production&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=medical+CBD+production+in+Romania+legal+status&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=CBD+cultivation+and+production+regulations+Romania+medical+use&client=app-vertex-grounding&safesearch=active"]}]}