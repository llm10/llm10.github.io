{"s":"Gemini","m":"gemini-flash-latest","t":1759646845,"r":[{"role":"u","text":"do people save beef fat and make a deep fryer out of it"},{"role":"a","text":"Yes, people save beef fat and render it down into **tallow** to use as a deep-frying medium.\n\nTallow, which is purified, rendered beef or mutton fat, was traditionally the gold standard for deep frying for generations before being largely replaced by vegetable and seed oils.\n\n*   **Saving the Fat (Rendering):** People save the excess fat trimmings from cuts like brisket and kidney fat (suet) and slowly cook, or \"render,\" it down. This process separates the pure fat from any meat scraps and water, resulting in a clean, solid white fat\u2014the tallow.\n*   **Making a Deep Fryer Out of It:** The tallow itself *becomes* the frying medium, used in a deep-fryer appliance or a heavy-bottomed pot, to fry foods like french fries and fried chicken. It is prized for its high smoke point and the rich, savory flavor it imparts to food. For example, the original recipe for McDonald's French fries used beef tallow.","sources":["https:\/\/blog.thermoworks.com\/how-to-render-beef-tallow\/","https:\/\/parkercountybeefcompany.com\/blogs\/news\/is-beef-tallow-good-for-deep-frying","https:\/\/heygrillhey.com\/beef-tallow\/","https:\/\/mvmeatsfc.com\/blogs\/news\/how-to-render-beef-fat","https:\/\/themilleracres.com\/how-to-render-tallow-from-beef-fat\/","https:\/\/www.youtube.com\/watch?v=1Vj6QFbdsTI","https:\/\/porterroad.com\/products\/beef-tallow","https:\/\/www.youtube.com\/watch?v=U_14giOZpsI","https:\/\/www.reddit.com\/r\/AskCulinary\/comments\/1c5uw5w\/deep_frying_in_tallow\/","https:\/\/www.google.com\/search?q=rendering+beef+fat+for+cooking&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=using+beef+fat+for+deep+frying&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=tallow+deep+fryer&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"what about like ground beef runoff when you make a burger."},{"role":"a","text":"That runoff fat from ground beef is indeed saved by people, and it is a type of rendered beef fat that can be used for deep frying if enough is collected.\n\nHere is a breakdown of the practice:\n\n1.  **What it is:** The liquid fat is a form of **beef tallow** (or in British English, **dripping**). When you cook ground beef, especially fattier blends like 80\/20, a significant amount of fat is released along with water and meat juices.\n2.  **Saving the Fat:** Many people strain this liquid from the cooked ground beef and pour it into a heat-safe container, like a jar or can, and then refrigerate it. Once cooled, the pure, solid beef fat (tallow) will form a layer on top, separated from any watery juices that sank to the bottom.\n3.  **Using the Fat:** This saved tallow\/dripping is then used for cooking, prized for its flavor and high smoke point. Common uses include roasting vegetables (especially potatoes), saut\u00e9ing, or spreading on toast.\n4.  **Deep Frying:** Tallow, regardless of whether it comes from brisket trimmings or accumulated ground beef runoff, is an excellent traditional deep-frying medium. It has a high smoke point and imparts a savory flavor. While the amount of fat from a single batch of burgers would not be enough to fill a deep fryer, people who *consistently* save and accumulate this fat can certainly collect enough to use it in a small home deep fryer or a deep pot for frying.","sources":["https:\/\/www.quora.com\/How-can-I-make-use-of-the-fat-I-drain-when-cooking-ground-beef","https:\/\/www.southerngreen.com\/blog\/how-do-you-dispose-of-ground-beef-and-bacon-grease","https:\/\/www.reddit.com\/r\/AskCulinary\/comments\/10l4g52\/saving_beef_grease_from_ground_beef\/","https:\/\/heygrillhey.com\/beef-tallow\/","https:\/\/www.youtube.com\/watch?v=ihggZqENtT4","https:\/\/www.google.com\/search?q=can+you+deep+fry+with+ground+beef+fat+runoff&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=saving+ground+beef+fat+runoff+for+cooking&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=rendering+ground+beef+fat+for+tallow&client=app-vertex-grounding&safesearch=active"]}]}