{"s":"Gemini","m":"gemini-flash-latest","t":1759805183,"r":[{"role":"u","text":"list the forms of weed people smoke and the methods they smoke it"},{"role":"a","text":"**Forms of Weed (Cannabis) People Smoke**\n\nThe forms of cannabis people smoke range from the raw, dried plant material to highly potent extracts and concentrates:\n\n*   **Dried Flower (Buds\/Herb):** The most common form, consisting of the dried and cured flowers, leaves, stems, and seeds of the *Cannabis sativa* L plant.\n*   **Hashish (Hash):** A concentrated form made from the sticky resin (trichomes) of the cannabis plant, often pressed into a block, cake, or ball.\n*   **Concentrates and Extracts:** Highly potent forms with maximized THC levels, typically named after their texture or appearance:\n    *   **Shatter:** A hard, brittle, glass-like amber solid.\n    *   **Wax\/Budder:** A soft, waxy solid.\n    *   **Oils (Honey Oil, BHO):** A gooey liquid, often used in vape pens or for dabbing.\n*   **Synthetic Cannabinoids (e.g., Spice, K2):** Lab-made chemicals sprayed onto dried plant material for smoking.\n\n**Methods and Devices for Smoking and Inhaling**\n\nThe methods involve burning the material to create smoke or heating it to create a vapor for inhalation:\n\n*   **Joints:** Dried flower rolled in a cigarette paper.\n*   **Blunts:** Dried flower rolled in a cigar wrapper or tobacco leaf, often larger than a joint.\n*   **Spliffs:** A hand-rolled cigarette that mixes cannabis with tobacco.\n*   **Pipes (Bowls):** Portable devices for smoking dried material. They come in many materials and shapes. Subtypes include chillums, one-hitters, and bubblers.\n*   **Bongs (Water Pipes):** Devices that use water in a chamber to cool and filter the smoke before inhalation. Subtypes include gravity bongs.\n*   **Dabbing:** A method for smoking or vaporizing concentrates (like shatter, wax, or oil) using a specialized water pipe or 'dab rig' with a heated surface (nail).\n*   **Vaping (Vaporizing):** Using a device like a dry herb vaporizer, vape pen, or e-cigarette to heat either dried flower or concentrates to produce a vapor instead of smoke.\n*   **Solar Toking\/Puffing:** Using a magnifying lens to focus the sun's rays to light the cannabis in a pipe or bowl.","sources":["https:\/\/nida.nih.gov\/research-topics\/cannabis-marijuana","https:\/\/bocarecoverycenter.com\/marijuana\/forms\/","https:\/\/lagunatreatment.com\/drug-abuse\/marijuana\/cannabis-forms\/","https:\/\/adcare.com\/marijuana\/forms\/","https:\/\/www.leafly.com\/learn\/consume\/smoke","https:\/\/www.sunmedgrowers.com\/education-resources\/blog\/post\/best-ways-to-smoke-weed\/","https:\/\/en.wikipedia.org\/wiki\/Cannabis_smoking","https:\/\/en.wikipedia.org\/wiki\/Cannabis_(drug)","https:\/\/www.google.com\/search?q=forms+of+cannabis+people+smoke&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=methods+of+smoking+cannabis&client=app-vertex-grounding&safesearch=active"]}]}