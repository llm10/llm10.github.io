{"s":"Gemini","m":"gemini-flash-latest","t":1759884034,"r":[{"role":"u","text":"can you disable amdgpu's Secure Display as of kernel 6.17?"},{"role":"a","text":"The `amdgpu` driver, as of kernel 6.17, does not have a documented kernel boot parameter to directly disable the \"Secure Display\" feature. The feature is tied to the AMD Platform Security Processor (PSP), and errors like \"amdgpu: Secure display: Generic Failure\" are a known issue on some systems.\n\nThere are two primary methods to prevent the Secure Display functionality from activating:\n\n### 1. Disabling the Platform Security Processor (PSP) in the BIOS\/UEFI (If Available)\n\nSince Secure Display is a security-related feature that uses the PSP (AMD's Secure Processor), the most direct and complete method to disable this entire class of security features is through the system's firmware:\n\n*   Check your motherboard's **BIOS\/UEFI settings** for an option to disable the **AMD Platform Security Processor (PSP)** or **PSP fTPM**.\n*   This option is often found in the \"Advanced\" or \"Security\" settings. Disabling the PSP will prevent the kernel from initializing and using the Secure Display TA (Trusted Application).\n\n### 2. Using the Kernel Parameter for S\/G Display (If the issue is related to APUs)\n\nWhile not a direct \"Secure Display\" toggle, some users experiencing display-related issues and \"Generic Failure\" messages have found a workaround by disabling the **S\/G (Scatter\/Gather) display** feature, which is only relevant for **APUs** (Integrated Graphics).\n\nTo attempt this, add the following parameter to your kernel command line (e.g., in `\/etc\/default\/grub` in the `GRUB_CMDLINE_LINUX_DEFAULT` line):\n\n```\namdgpu.sg_display=0\n```\n\nAfter adding the parameter, you must update your bootloader configuration (e.g., run `sudo update-grub` on Debian\/Ubuntu systems) and reboot.","sources":["https:\/\/bbs.archlinux.org\/viewtopic.php?id=293496","https:\/\/www.reddit.com\/r\/AMDHelp\/comments\/1fci5m4\/amd_gpu_secure_display_generic_failure_on_linux\/","https:\/\/www.phoronix.com\/news\/AMDGPU-Secure-Display-Patches","https:\/\/www.kernel.org\/doc\/html\/v6.6\/gpu\/amdgpu\/module-parameters.html","https:\/\/wiki.archlinux.org\/title\/AMDGPU","https:\/\/www.google.com\/search?q=amdgpu.securedisplay&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=amdgpu+%22secure+display%22+kernel+parameter&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=amdgpu.sg_display+kernel+parameter+official&client=app-vertex-grounding&safesearch=active"]}]}