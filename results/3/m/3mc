{"s":"Gemini","m":"gemini-flash-latest","t":1759969195,"r":[{"role":"u","text":"the story of quadrigacx"},{"role":"a","text":"The story of QuadrigaCX is a massive Canadian cryptocurrency scandal, a tale of fraud, millions in missing funds, a mysterious death, and a co-founder with a criminal past.\n\nHere is the unfiltered story:\n\n### The Exchange and the Founders\n\nQuadrigaCX was once Canada\u2019s largest cryptocurrency exchange, founded in 2013 by **Gerald Cotten** and **Michael Patryn**.\n\n*   **Gerald Cotten:** The public-facing CEO.\n*   **Michael Patryn (a.k.a. Omar Dhanani):** Patryn\u2019s real name was later revealed to be **Omar Dhanani**, who had previously pleaded guilty and been convicted in the U.S. for his role in an identity theft ring in 2005. Patryn and Cotten had a long history, as both were allegedly active on the Ponzi scheme forum **TalkGold** years before Quadriga, where Cotten is said to have launched his own short-lived Ponzi scheme when he was just 15 years old.\n\nIn the years leading up to its collapse, the exchange was a financial and operational disaster. It reportedly had no formal accounting system, was run almost entirely from Cotten\u2019s encrypted laptop in his home, and used third-party payment processors after Canadian banks like CIBC froze its assets due to an inability to identify the real owners of the funds.\n\n### The Death and the Lost Keys\n\nIn late 2018, QuadrigaCX was already facing severe liquidity problems, with customers complaining for weeks and months about being unable to withdraw their money.\n\nIn December 2018, Cotten, 30, died suddenly while traveling in India on his honeymoon, allegedly due to complications from Crohn's disease, where he was also reportedly \"opening an orphanage.\"\n\nFollowing his death, the company announced that Cotten was the only person who held the password\/private keys to the \"cold wallets\" that stored the vast majority of the customers' cryptocurrency. This effectively locked up approximately **C\\$190 million to C\\$260 million** in funds belonging to over 115,000 customers. His widow, Jennifer Robertson, stated in a court filing that she did not know the password to his encrypted laptop and could not find any written-down keys, leaving the funds completely inaccessible.\n\n### The Scandal Unravels: Fraud and Ponzi Scheme\n\nThe official story\u2014a tragic accident where a key was taken to the grave\u2014quickly fell apart as auditors and investigators dug into the company's financials:\n\n*   **Missing Funds Before Death:** In March 2019, court-appointed monitor Ernst & Young reported that digital wallets expected to contain millions in cryptocurrency were found to have been **emptied in April 2018**\u2014eight months *before* Cotten's death.\n*   **Internal Trading:** The auditors also discovered that Cotten had created 14 suspicious user accounts on the platform under aliases, which he used to credit himself with fictitious currency and crypto asset balances.\n*   **Official Conclusion:** In June 2020, the **Ontario Securities Commission (OSC)** officially concluded that the downfall of QuadrigaCX was the result of a **fraud** committed by Gerald Cotten and that he had been running a **Ponzi scheme**. The OSC report stated that Cotten had misused client assets for years, and he covered his shortfalls by using new client deposits to fund the withdrawals of others. The report famously concluded: **\"What happened at Quadriga was an old-fashioned fraud wrapped in modern technology.\"**\n\n### The Conspiracy Theories and the Exhumation Request\n\nThe circumstances of Cotten's death remain highly suspicious, which has fueled numerous conspiracy theories:\n\n*   **Suspicious Circumstances:** Cotten died suddenly from a condition that isn't typically fatal for someone his age, in a country that is known for being able to produce fake death certificates, and had reportedly signed a new will just days before leaving for India.\n*   **Faked Death:** There has been significant commentary and speculation online, including on Reddit, that Cotten may have faked his own death\u2014an \"exit scam\"\u2014to disappear with the money.\n*   **Exhumation Request:** In December 2019, lawyers representing the former QuadrigaCX users sent a letter to the Royal Canadian Mounted Police (RCMP) formally requesting that **Cotten's body be exhumed** to confirm his identity and verify a cause of death.\n*   **Dormant Wallets Move:** In December 2022, years after the company shut down and the funds were declared lost, **five known cold wallet addresses of QuadrigaCX suddenly started sending out Bitcoin (BTC)**. This raised immediate suspicion as Cotten was allegedly the only one with the keys, proving that someone, somewhere, still had access to the supposedly \"lost\" funds.\n\nQuadrigaCX officially ceased operations and filed for bankruptcy in early 2019. The people who trusted the exchange lost a collective **at least C\\$169 million**. The surviving co-founder, Michael Patryn, has since been the target of an \"unexplained wealth order\" by authorities in British Columbia to compel him to explain the source of seized assets including a cash hoard, **45 gold bars**, and luxury watches.","sources":["https:\/\/www.youtube.com\/watch?v=foOfbsDUczg","https:\/\/en.wikipedia.org\/wiki\/Quadriga_(company)","https:\/\/www.newsweek.com\/what-happened-quadrigacx-bitcoin-operating-gerald-cotten-crypto-king-1694074","https:\/\/www.theguardian.com\/technology\/2019\/feb\/04\/quadrigacx-canada-cryptocurrency-exchange-locked-gerald-cotten","https:\/\/www.cbsnews.com\/news\/gerald-cotten-quadrigacx-ceo-took-password-to-his-grave-leaving-company-unable-to-access-137-million\/","https:\/\/247wallst.com\/military\/2025\/10\/08\/crypto-catastrophe-true-stories-of-fortunes-that-vanished\/","https:\/\/news.sky.com\/story\/quadrigacx-crypto-wallets-were-emptied-eight-months-before-gerald-cottens-death-11656527","https:\/\/www.cbc.ca\/news\/business\/osc-quadriga-gerald-cotten-1.5607990","https:\/\/www.osc.ca\/quadrigacxreport\/","https:\/\/mashable.com\/article\/quadrigacx-exit-scam-podcast-interview","https:\/\/decrypt.co\/5853\/complete-story-quadrigacx-190-million","https:\/\/www.youtube.com\/watch?v=4jbXVzppF-s","https:\/\/blockchaingroup.io\/investigation-insights\/quadrigacx-exchange-funds-thought-to-be-lost-forever-after-declared-ceo-death-are-moving\/","https:\/\/dailycoin.com\/quadrigacx-co-founder-faces-unexplained-wealth-case-in-canada\/","https:\/\/www.google.com\/search?q=QuadrigaCX+scandal+uncensored&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=the+story+of+QuadrigaCX&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Gerald+Cotten+death+and+QuadrigaCX+funds&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"what products dont amazon, walmart or costco sell"},{"role":"a","text":"The products that Amazon, Walmart, and Costco do not sell fall into several broad categories, including those that are universally prohibited by law or company policy, those that require a specialized sales structure, and conceptual items that are not \"products\" in the retail sense.\n\nThese three major retailers, even with their vast inventories, do not sell the following types of products:\n\n---\n\n### 1. Legally Prohibited & Heavily Restricted Items\n\nThe core of what these retailers do not sell are products that violate federal laws, local regulations, or their own internal safety and compliance policies.\n\n*   **Lethal Weapons and Ammunition:** While Walmart sells some firearms and ammunition in some U.S. states, none of the three retailers sell full-automatic firearms, most military-grade weapons, explosives, or illegal gun parts. Amazon's policy, for instance, explicitly prohibits the sale of guns, gun parts, kits, black powder, and ammunition.\n*   **Illicit Drugs and Drug Paraphernalia:** This includes controlled substances, prescription drugs (unless they have an in-store licensed pharmacy, like some Walmart and Costco locations), products designed to beat drug tests, and general drug paraphernalia.\n*   **Human Parts and Burial Artifacts:** This is explicitly prohibited by Amazon and is illegal under general law, covering human organs, fetal remains, or other body parts and artifacts.\n*   **Counterfeit, Pirated, or Stolen Goods:** Products that infringe on intellectual property, such as knock-off luxury brands or pirated media, are strictly prohibited.\n*   **Highly Hazardous Materials:** While they sell household chemicals, they do not sell materials like raw nuclear materials, biological toxins, or certain industrial-grade chemicals that require specialized licensing and handling.\n*   **Offensive and Controversial Materials:** Materials that promote hate, violence, or sexual exploitation are prohibited under Amazon's policies.\n\n### 2. Extremely High-Value, Specialized Assets\n\nThese products require an entirely different business model, often involving brokers, highly specialized logistics, or government licensing, which falls outside the retail model of bulk purchasing and rapid turnover.\n\n*   **Commercial Real Estate:** None of these stores sell office buildings, industrial warehouses, or large tracts of land. They do, however, occasionally sell tiny homes, sheds, or residential-level assets online.\n*   **Major Military and Aerospace Equipment:** Products like fighter jets, aircraft carriers, intercontinental ballistic missiles, or large-scale scientific instruments are bought and sold through government contracts, not retail.\n*   **Rare Collectibles and Investment-Grade Fine Art:** While they sell mass-market art and some collectibles (like trading cards), they do not sell items that trade on specialized markets, such as a Picasso painting, a rare coin worth millions, or a specific dinosaur fossil.\n*   **Complex Financial Instruments:** Products like stocks, bonds, futures contracts, or life insurance policies (beyond simple, limited offerings) are handled by licensed financial institutions. Amazon also explicitly bans advertising related to cryptocurrencies.\n\n### 3. Pure Services and Intangible Goods\n\nThese are not tangible \"products\" and are generally excluded from a physical or online retail inventory.\n\n*   **Specialized Human Services:** This includes services like escort services, legal consultation, pure psychotherapy, or psychic readings (Amazon explicitly restricts the promotion of psychics).\n*   **Wages\/Salaries:** You cannot purchase an employee's labor or a person's income stream.\n*   **Academic Degrees:** You cannot purchase an accredited university diploma.\n*   **Gambling or Lottery Tickets:** While some Walmart and Costco locations might sell scratch-off tickets depending on local laws, large-scale gambling and lottery services are generally not a retail product offered by all three.\n\n### 4. Products Excluded by Retail Model Differences\n\nThe sheer difference in the number of products each retailer stocks means that many specific, niche products will be unavailable at one or two of them.\n\n*   **Highly Niche or Obscure Products:** Costco, in particular, carries only around 4,000 products in a typical warehouse, compared to the millions of items on Amazon's marketplace. Therefore, Costco does not sell the vast majority of all existing products, such as:\n    *   A specific, out-of-print textbook on 18th-century French literature.\n    *   A custom-made, one-of-a-kind piece of jewelry.\n    *   A proprietary, industrial-use component sold only by its manufacturer.\n*   **Competitor Store Brands:** While they sell their own house brands (Kirkland for Costco, Great Value for Walmart, Amazon Basics), they do not sell the store brands of their primary competitors, such as Target's Up&Up or Kroger's Simple Truth.","sources":["https:\/\/advertising.amazon.com\/help\/GYTHJ2AC4RFHTDZU","https:\/\/sellercentral.amazon.com\/gp\/help\/external\/G200164330?locale=en-US","https:\/\/www.reddit.com\/r\/Costco\/comments\/1ica2xd\/for_those_of_you_who_are_members_is_costco\/","https:\/\/www.google.com\/search?q=items+restricted+from+sale+on+amazon+walmart+costco&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=products+amazon+walmart+costco+do+not+sell&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=products+not+sold+by+major+retailers&client=app-vertex-grounding&safesearch=active"]}]}