{"s":"Grok","m":"grok-3-mini","t":1760256340,"r":[{"role":"u","text":"acceptable cholesterol in 1960 to current - make table"},{"role":"a","text":"| Period          | Acceptable Total Cholesterol (mg\/dL) | Key Notes on Guidelines |\n|---------------|-------------------------------------|-------------------------|\n| 1960-1969    | Not well defined; generally <260 considered normal, with >260 as high | Based on early studies like the Framingham Heart Study; no formal guidelines. |\n| 1970-1979    | Generally <240; >240 as borderline high | Increasing awareness from research, but still informal. |\n| 1980-1987    | <240 desirable; >240 as high | Early recommendations from organizations like the American Heart Association (AHA). |\n| 1988-2001    | <200 desirable | National Cholesterol Education Program (NCEP) Adult Treatment Panel (ATP) I (1988) set this standard. |\n| 2002-2012    | <200 desirable, with LDL targets (e.g., <100 for high-risk) | NCEP ATP III (2001) refined guidelines, emphasizing risk factors. |\n| 2013-2018    | <200, but treatment based on 10-year risk assessment rather than fixed levels | ACC\/AHA guidelines (2013) shifted focus to statins for those at risk. |\n| 2019-Present | <200, individualized based on age, risk, and other factors (e.g., LDL <70-100 for high-risk) | Latest ACC\/AHA guidelines (2018) prioritize overall cardiovascular risk over strict cutoffs. |"}]}