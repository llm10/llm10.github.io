{"s":"Grok","r":[["u","t","do If-None-Match requests to api.github.com use your rate limit quota"],["a","t","Yes, requests to api.github.com using the If-None-Match header still count toward your rate limit quota. Each API request, including conditional GET requests with If-None-Match, is processed and increments the rate limit counter, even if the response is a 304 Not Modified. GitHub's rate limits are based on the number of requests made, not the response status. Check the GitHub API documentation for details on rate limit specifics."],["u","t","can i set headers with jquery $.get() or only $.ajax()"],["a","t","You cannot directly set custom headers with jQuery's $.get() method, as it is a shorthand function that doesn't support header options. To set headers, you need to use $.ajax() instead, where you can pass a headers object in the settings.\n\nExample using $.ajax():\n\n```javascript\n$.ajax({\n  url: 'your-url',\n  type: 'GET',\n  headers: {\n    'Custom-Header': 'value'\n  },\n  success: function(data) {\n    \/\/ Handle success\n  }\n});\n```\n\nIf you want to apply headers globally, you can use $.ajaxSetup(), but this affects all subsequent AJAX requests."],["u","t","!for jquery $.ajax() are .done() and .fail() methods exactly the same as .success() and .error()"],["a","t","No, .done() and .fail() are not exactly the same as .success() and .error() in jQuery's $.ajax().\n\n- **.success() and .error()** are options you can specify in the $.ajax() settings object to handle successful responses and errors, respectively. They are part of the older callback style and have been deprecated since jQuery 1.8 in favor of promise-based methods.\n\n- **.done() and .fail()** are methods on the jqXHR object returned by $.ajax(). They allow you to attach handlers for successful responses and errors in a way that aligns with jQuery's implementation of the Promises\/A+ specification, making it easier to chain or add multiple callbacks.\n\nIn practice:\n- Using .success() in $.ajax() settings is similar to calling .done() on the returned object, but .done() offers more flexibility for promise chaining.\n- .error() is similar to .fail(), but again, .fail() is the modern approach.\n\nExample with .success() and .error():\n\n```javascript\n$.ajax({\n  url: 'your-url',\n  success: function(data) {\n    console.log('Success:', data);\n  },\n  error: function(xhr, status, error) {\n    console.log('Error:', error);\n  }\n});\n```\n\nExample with .done() and .fail():\n\n```javascript\nvar jqXHR = $.ajax({ url: 'your-url' });\njqXHR.done(function(data) {\n  console.log('Success:', data);\n});\njqXHR.fail(function(xhr, status, error) {\n  console.log('Error:', error);\n});\n\/\/ You can chain: jqXHR.done(...).fail(...);\n```\n\nIt's recommended to use .done() and .fail() for new code, as they are more versatile and align with modern JavaScript practices."]]}