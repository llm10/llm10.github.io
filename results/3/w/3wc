{"s":"Gemini","m":"gemini-flash-latest","t":1760701022,"r":[{"role":"u","text":"does Metal Gear Solid Delta Snake Eater 2025 use the same old engine"},{"role":"a","text":"No, *Metal Gear Solid $\\Delta$: Snake Eater* (the 2025 remake) does **not** use the same old engine as the original 2004 game.\n\nThe remake has been completely rebuilt using **Unreal Engine 5 (UE5)**, a modern, third-party engine.\n\nThe original *Metal Gear Solid 3: Snake Eater* (2004) was built on a proprietary, in-house engine that was an evolution and heavy modification of the engine used for *Metal Gear Solid 2: Sons of Liberty*.\n\nWhile the *Metal Gear* franchise later developed and used the **Fox Engine** for games like *Metal Gear Solid V: The Phantom Pain*, the remake of *Snake Eater* is Konami's move to a commercial engine (UE5), which is a departure from their proprietary technology.","sources":["https:\/\/en.wikipedia.org\/wiki\/Metal_Gear_Solid_Delta:_Snake_Eater","https:\/\/beebom.com\/konami-faces-backlash-as-metal-gear-delta-ditches-fox-engine-for-unreal-engine-5\/","https:\/\/www.creativebloq.com\/3d\/video-game-design\/why-mgs-snaker-eater-is-the-unreal-engine-5-remake-that-matters","https:\/\/store.steampowered.com\/agecheck\/app\/2417610\/","https:\/\/www.youtube.com\/watch?v=I05MXhiKtOI","https:\/\/www.reddit.com\/r\/metalgearsolid\/comments\/t01s0d\/is_it_true_that_mgs3_is_using_a_heavily_modified\/","https:\/\/www.reddit.com\/r\/metalgearsolid\/comments\/xqfddc\/what_engine_does_metal_gear_solid_2_3_twin_snakes\/","https:\/\/www.google.com\/search?q=Metal+Gear+Solid+3+Snake+Eater+original+engine&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Metal+Gear+Solid+Delta+Snake+Eater+engine&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"how long is Indiana Jones and the Great Circle: The Order of Giants DLC"},{"role":"a","text":"*Indiana Jones and the Great Circle: The Order of Giants* DLC is generally reported to be around **4 to 5 hours** in length if you focus on the main story objectives.\n\nFor players aiming for 100% completion, which includes finding all collectibles and achievements, the playtime is estimated to be approximately **6 to 6.5 hours**. Some players estimate they could stretch the playtime to 7-9 hours by thoroughly exploring and collecting everything.\n\nThe DLC is a story expansion that functions as a large side mission, which takes place during the events of the main game, featuring new locations beneath Rome.","sources":["https:\/\/www.gamespot.com\/reviews\/indiana-jones-and-the-great-circle-the-order-of-giants-dlc-review\/1900-6418404\/","https:\/\/deltiasgaming.com\/indiana-jones-and-the-great-circle-order-of-the-giants-how-long-to-beat\/","https:\/\/www.ign.com\/articles\/indiana-jones-and-the-great-circle-the-order-of-giants-review","https:\/\/howlongtobeat.com\/game\/163708","https:\/\/www.reddit.com\/r\/indianajones\/comments\/1n7574l\/length_of_order_of_the_giants\/","https:\/\/bethesda.net\/en\/article\/2e8gKo8DfjVZ1zj5YmOJF3\/indiana-jones-and-the-great-circle-the-order-of-giants-dlc-available-now","https:\/\/www.lucasfilm.com\/news\/indiana-jones-and-the-great-circle-the-order-of-giants-dlc\/","https:\/\/www.newsweek.com\/entertainment\/video-games\/indiana-jones-great-circle-dlc-has-one-feature-you-didnt-expect-2124016","https:\/\/www.google.com\/search?q=Indiana+Jones+and+the+Great+Circle+The+Order+of+Giants+DLC+length&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Indiana+Jones+and+the+Great+Circle+DLC+content&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"great circle save folder"},{"role":"a","text":"The save folder location for *Indiana Jones and the Great Circle* on **PC** varies depending on whether you are using **Steam** or a **Game Pass** version (like the Xbox app\/Microsoft Store).\n\nHere are the typical locations:\n\n### For Steam Users:\n\nThe save files are usually located within your Steam installation folder. The path is:\n\n`C:\\Program Files (x86)\\Steam\\userdata\\[YOUR STEAM ID]\\2677660\\remote\\`\n\n*   **`[YOUR STEAM ID]`**: This will be a folder named after your unique Steam user ID number.\n*   **`2677660`**: This is the Steam application ID for *Indiana Jones and the Great Circle*.\n*   The actual saved files are inside the **`remote`** folder.\n\n### For Game Pass \/ Microsoft Store Users:\n\nThe save files for the Game Pass\/Microsoft Store version are typically hidden deep within your user's AppData folder due to the platform's restrictions.\n\n`C:\\Users\\[Your Username]\\AppData\\Local\\Packages\\BethesdaSoftworksProjectRelic_ [alphanumeric string]\\SystemAppData\\wgs\\`\n\n**Note on Configuration Files:**\n\nThe configuration files (like graphics settings) are often found in a separate, more straightforward location:\n\n`C:\\Users\\[Your Username]\\Saved Games\\MachineGames\\TheGreatCircle\\`\n*   Inside this folder, you might find a `base` folder that contains the config files, such as `TheGreatCircleConfig`.","sources":["https:\/\/primagames.com\/tips\/indiana-jones-and-the-great-circle-save-file-location-on-pc","https:\/\/www.youtube.com\/watch?v=WqOyij8S_Dw","https:\/\/www.youtube.com\/watch?v=OCDYGp3GQ0Y","https:\/\/steamcommunity.com\/app\/2677660\/discussions\/0\/604141771964820909\/","https:\/\/www.google.com\/search?q=Indiana+Jones+and+the+Great+Circle+save+file+location+PC&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"can i just play order of giants without redoing story if i lost all my save games"},{"role":"a","text":"Yes, you can likely play the *Order of Giants* DLC without a completed save, but you will need to start a new game and play until you reach a specific point in the main story to unlock it.\n\nHere is the breakdown:\n\n*   **Not Standalone:** The DLC is not a standalone adventure you can select directly from the main menu. You cannot just launch it without an active save file for the main game.\n*   **Required Progress:** You must reach a specific point in the main story to begin the DLC quest. The official access point is when you start the objective **\u201cBring the Parchment to Antonio\u201d** in the mission **\u201cThe Stolen Cat Mummy.\u201d** At this point, a new Fieldwork quest called **\u201cA Mystery Begins\u201d** will appear in your Journal.\n*   **Starting the Quest:** You then need to use the **Travels** tab in your Journal to go to the **Vatican** and find the new quest-giver, **Father Ricci**, to officially start the DLC.\n\nSince you lost all your save games, you would need to **start a new game** and play through the beginning of the main story until you get to the required mission objective in the Vatican. This will take some time, but you won't need to finish the entire main game.","sources":["https:\/\/www.google.com\/search?q=The+Order+of+Giants+DLC+standalone+access&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Indiana+Jones+and+the+Great+Circle+The+Order+of+Giants+DLC+access+without+save+file&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=how+to+start+The+Order+of+Giants+DLC+in+Indiana+Jones+and+the+Great+Circle&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"thats many hours to get to the vatican"},{"role":"a","text":"You are absolutely right. While you don't need to finish the main game, playing through a new save until you reach the Vatican can take a significant amount of time.\n\nBased on player reports, the Vatican section of the main story is part of the mission **\"The Stolen Cat Mummy,\"** which is one of the longest sections in the entire game.\n\nWhile estimates vary depending on how much side-content and exploration you do, you should expect to play for around **3 to 5 hours** of the main story on a new save file just to reach the required objective point.\n\n*   The Vatican mission is considered the first major, proper mission after the initial tutorial section (\"The Break-In\").\n*   One review noted that they were still playing and exploring the Vatican section after **9 hours** because of how dense the area is with side puzzles and exploration.\n\nIn summary: you will have to make a considerable time investment in a new save (likely **3-5 hours**) to unlock and start the *Order of Giants* DLC quest.","sources":["https:\/\/www.trueachievements.com\/a459337\/the-stolen-cat-mummy-achievement","https:\/\/www.thereviewgeek.com\/indianajonesgreatcircle-santangelo-walkthrough\/","https:\/\/www.gamesradar.com\/games\/action\/indiana-jones-and-the-great-circle-now-playing-after-9-hours-i-cant-bear-to-leave-the-vatican\/","https:\/\/www.google.com\/search?q=how+long+to+reach+The+Stolen+Cat+Mummy+mission+Indiana+Jones+and+the+Great+Circle&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Indiana+Jones+and+the+Great+Circle+playtime+to+reach+Vatican&client=app-vertex-grounding&safesearch=active"]}]}