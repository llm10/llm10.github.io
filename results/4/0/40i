{"s":"Gemini","m":"gemini-flash-latest","t":1761051504,"r":[{"role":"u","text":"what books do orthodox use. septuagint plus ?"},{"role":"a","text":"The books used by Orthodox Christians are the Holy Bible, which consists of the New Testament (the same 27 books as the rest of Christianity) and the Old Testament, which is based on the ancient Greek translation known as the **Septuagint (LXX)**.\n\nThe Orthodox Old Testament includes the books of the Hebrew Bible (the Protocanonical books) plus the books you refer to as the \"plus,\" which are called the **Deuterocanonical books** or **Anagignoskomena** (meaning \"readable\" or \"worthy to be read\") in the Orthodox tradition.\n\nThe Old Testament canon for the Orthodox Church, following the Septuagint, includes the 39 books of the Protestant Old Testament plus the following books, though the exact list can vary slightly between local Orthodox churches:\n\n**Books included in the Septuagint \"plus\" (Anagignoskomena):**\n\n*   **Tobit**\n*   **Judith**\n*   **Wisdom of Solomon**\n*   **Sirach** (also called Ecclesiasticus or Wisdom of Jesus Son of Sirach)\n*   **Baruch**\n*   **Letter of Jeremiah** (sometimes considered chapter 6 of Baruch)\n*   **1 Maccabees**\n*   **2 Maccabees**\n*   **Greek additions to Esther**\n*   **Greek additions to Daniel** (Song of the Three Children, Susanna, and Bel and the Dragon)\n*   **1 Esdras** (sometimes called 3 Esdras)\n*   **Psalm 151**\n*   **Prayer of Manasseh**\n\nSome Orthodox Bibles may also include **3 Maccabees** and **4 Maccabees** (the latter is often included in an appendix and not always considered canonical).","sources":["https:\/\/www.lacopts.org\/orthodoxy\/our-faith\/the-holy-bible\/on-the-use-of-the-septuagint-in-the-new-testament\/","https:\/\/en.wikipedia.org\/wiki\/Septuagint","https:\/\/shrewsburyorthodox.com\/introduction-to-orthodoxy\/holy-scripture-in-the-orthodox-church-the-septuagint\/","https:\/\/en.wikipedia.org\/wiki\/Deuterocanonical_books","https:\/\/orthodoxwiki.org\/Apocrypha","https:\/\/www.reddit.com\/r\/OrthodoxChristianity\/comments\/6g06zi\/do_the_orthodox_view_the_apocryphadeuterocanon\/","https:\/\/www.oca.org\/questions\/scripture\/canon-of-scripture","https:\/\/www.google.com\/search?q=Orthodox+Christian+deuterocanonical+books&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=books+in+the+Orthodox+Christian+Bible+canon&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Orthodox+Christian+use+of+Septuagint&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"what version of the new testament do they prefer, if not the kjv"},{"role":"a","text":"The Orthodox Church does not have a single, officially endorsed English translation of the Bible. However, based on the Greek text they accept and common usage, a preference for certain versions is evident.\n\nThe preferred Greek source text for the New Testament is the **Byzantine Text-Type**, often represented by the **Majority Text** or, more specifically, the **1904 Patriarchal Text** (an official text published by the Ecumenical Patriarchate). This tradition differs from the Critical Text (Alexandrian text-type) that underlies most modern Protestant and Catholic translations.\n\nGiven this textual preference, the most commonly used English translations for the New Testament, if not the KJV, are:\n\n1.  **New King James Version (NKJV):** The NKJV is the New Testament text used in the widely read *Orthodox Study Bible*. It is also explicitly recommended by some bishops because it follows the **Textus Receptus**, which is very close to the Byzantine Majority Text, unlike many other modern translations.\n2.  **Revised Standard Version (RSV):** The RSV is often used in liturgical services by jurisdictions like the Greek Orthodox Archdiocese of America. It is also recommended by some clergy as a good translation.\n3.  **Orthodox New Testament:** A specific translation based closely on the 1904 Constantinopolitan Patriarchal Text.\n\nWhile the King James Version (KJV) is recognized and sometimes used, the **New King James Version (NKJV)** is frequently cited as the preferred English New Testament for general reading and in the *Orthodox Study Bible* due to its basis on the same textual tradition as the Orthodox Church's official Greek text.","sources":["https:\/\/www.quora.com\/What-version-of-the-Holy-Bible-is-used-by-the-Orthodox-Church","https:\/\/www.quora.com\/Is-there-an-English-version-of-the-Orthodox-Churchs-original-Greek-Bible-If-not-what-are-the-translations-like","https:\/\/www.reddit.com\/r\/OrthodoxChristianity\/comments\/ll1syr\/what_bible_do_orthodox_christians_use_read_and\/","https:\/\/hermeneutics.stackexchange.com\/questions\/25121\/what-texts-do-modern-scholars-use-to-translate-the-new-testament","https:\/\/www.bereanpatriot.com\/majority-text-vs-critical-text-vs-textus-receptus-textual-criticism-101\/","https:\/\/www.reddit.com\/r\/OrthodoxChristianity\/comments\/4hbet1\/could_anyone_explain_to_an_outsider_why_the\/","https:\/\/christianity.stackexchange.com\/questions\/52160\/which-english-translation-of-the-bible-does-the-orthodox-church-use","https:\/\/www.oca.org\/reflections\/fr.-john-breck\/but-what-shall-i-read","https:\/\/www.google.com\/search?q=preferred+new+testament+translation+orthodox+church+in+english&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=new+testament+textus+receptus+vs+critical+text+orthodox&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"difference between KJV and the 1904 Patriarchal Text"},{"role":"a","text":"The difference between the King James Version (KJV) and the 1904 Patriarchal Text lies in their foundational Greek source texts, though they belong to the same broader textual family:\n\n### 1. Source Text and Textual Family\n\n*   **King James Version (KJV) New Testament:** This translation is based on the **Textus Receptus (TR)**, a sequence of printed Greek New Testament editions (primarily by Erasmus, Stephanus, and Beza) from the 16th century. The Textus Receptus is a form of the **Byzantine Text-Type**, which was the dominant text used in the Eastern Church for centuries.\n\n*   **1904 Patriarchal Text (PT):** This is the official Greek New Testament text published by the Ecumenical Patriarchate of Constantinople. It is a carefully prepared edition of the **Byzantine Text-Type**, specifically constructed by a committee using 116 later Greek manuscripts and lectionaries (texts used in Church services) primarily from Mount Athos and Constantinople.\n\n**In short: Both are based on the Byzantine Text-Type, but the 1904 Patriarchal Text is a composite of the best-attested Byzantine manuscripts used in Orthodox worship, while the Textus Receptus is an earlier composite based on a smaller, later set of manuscripts available to Erasmus.**\n\n### 2. Specific Differences\n\nAlthough they are close, as they stem from the same textual tradition, there are variations:\n\n*   **Overall Agreement:** A study comparing the 1550 Textus Receptus (Stephanus's edition) to the 1904 Patriarchal Text in nearly 150 well-known passages where the KJV differs from modern translations found a high rate of agreement\u2014around 83% outright agreement, with the total agreement rising to nearly 90% when passages with the same meaning but minor wording differences are included.\n*   **Minor Variations:** In total, there are a number of discrepancies (sometimes described as \"thousands\") between the Textus Receptus and the 1904 Patriarchal Text. These are typically very minor differences in things like word order, spelling, or grammatical particles that do not significantly alter the theological meaning of the text.\n*   **The Book of Revelation:** This book shows the most significant divergence. In the disputed passages examined in one study, the Patriarchal Text and the Textus Receptus disagreed substantially in Revelation. This is largely because the Textus Receptus translator (Erasmus) only had one incomplete manuscript for Revelation, forcing him to translate many verses from the Latin Vulgate back into Greek. The 1904 Patriarchal Text uses a more consistent set of Greek manuscripts for this book.","sources":["https:\/\/en.wikipedia.org\/wiki\/King_James_Version","https:\/\/rsc.byu.edu\/sites\/default\/files\/pub_content\/pdf\/39%20The%20Greek%20New%20Testament%20Text%20of%20the%20King%20James%20Version.pdf","https:\/\/en.wikipedia.org\/wiki\/Patriarchal_text","https:\/\/www.logos.com\/product\/32420\/the-patriarchal-greek-new-testament","https:\/\/blairnaso.wordpress.com\/2019\/05\/15\/textus-receptus-compared-to-the-1904-patriarchal-text-and-clementine-vulgate-concerning-disputed-verses-in-the-king-james-version\/","https:\/\/community.logos.com\/discussion\/71473\/is-the-patriarchal-greek-new-testament-the-eqiuvalent-of-na-28-or-ubs-4\/p1","https:\/\/www.quora.com\/What-are-the-differences-between-1904-Patriarchal-Greek-New-Testament-and-2011-SBL-Greek-New-Testament","https:\/\/www.biblestudytools.com\/kjv\/","https:\/\/www.google.com\/search?q=1904+Patriarchal+Text+New+Testament&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=source+text+of+the+King+James+Version+New+Testament&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=difference+between+Textus+Receptus+and+1904+Patriarchal+Text&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"so orthodox churches have a copy of the patriarchal text and not the kjv, generally, right"},{"role":"a","text":"That generalization requires a crucial distinction between the original language (Greek) and translation (English):\n\n1.  **Patriarchal Text (PT):** The 1904 Patriarchal Text is the **normative Greek New Testament text** for the Eastern Orthodox Church, specifically approved by the Ecumenical Patriarchate of Constantinople for ecclesiastical use. Orthodox churches in Greece, and those jurisdictions that primarily use Greek, would certainly possess and use the PT in the original Greek for their services and official documents.\n\n2.  **King James Version (KJV):** The KJV is an **English translation**. Orthodox churches in English-speaking countries do **not** have a single, officially endorsed English Bible.\n\n    *   For **liturgical use**, many English-speaking jurisdictions use the KJV or the Revised Standard Version (RSV), or sometimes an authorized liturgical text that uses an archaic English style similar to the KJV.\n    *   For **private study**, the **New King James Version (NKJV)** is widely used, particularly because it is the New Testament text of the popular *Orthodox Study Bible* (OSB). The NKJV is preferred over many modern translations because its source text (*Textus Receptus*) is very close to the Patriarchal Text's Byzantine text-type.\n\n### Conclusion\n\nIt is **not** correct to say, generally, that Orthodox churches have a copy of the Patriarchal Text **instead of** the KJV.\n\n*   **Greek-speaking churches** will have the **Patriarchal Text (Greek)** as their standard. They would typically not use the KJV (English).\n*   **English-speaking churches** will have an **English translation** (like KJV, NKJV, or RSV) and are unlikely to have a separate copy of the Greek Patriarchal Text for general use, though their preferred English translations are often chosen specifically because their underlying Greek text is closely related to the Patriarchal Text.","sources":["https:\/\/www.google.com\/search?q=Orthodox+Study+Bible+New+Testament+text&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=official+greek+new+testament+text+of+orthodox+church&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=use+of+KJV+in+orthodox+churches&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"what about russian or romanian churches"},{"role":"a","text":"For the Russian Orthodox Church (Moscow Patriarchate) and the Romanian Orthodox Church, the situation regarding their preferred Bible text follows the same Eastern Orthodox principle (using the Septuagint for the Old Testament and the Byzantine text for the New Testament), but uses their respective national translations:\n\n### 1. Russian Orthodox Church (ROC)\n\n*   **Official Bible:** The primary and most commonly used version is the **Synodal Translation (\u0421\u0438\u043d\u043e\u0434\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0432\u043e\u0434)**.\n*   **Old Testament (OT):** The Synodal Translation of the OT is based on the **Hebrew Masoretic Text** (like most Protestant and Catholic Bibles) but incorporates the **Deuterocanonical books** from the Greek Septuagint\/Church Slavonic tradition (similar to the \"plus\" books mentioned earlier). This use of the Masoretic Text for the core books is a peculiarity of the Synodal Translation, distinguishing it from the purely Septuagint-based OT of the Greek Churches, though the Russian Church still formally holds the Septuagint as the authoritative text.\n*   **New Testament (NT):** The NT of the Synodal Translation is based on the **Greek Textus Receptus** (TR), which, as noted, is essentially the same textual tradition as the 1904 Patriarchal Text and the Byzantine Text-Type.\n*   **Language:** The translation is in modern Russian (19th-century Russian, to be precise). The Church also uses **Church Slavonic** extensively in its liturgical services, and there is a major Church Slavonic Bible version called the **Elizabeth Bible** (\u0415\u043b\u0438\u0437\u0430\u0432\u0435\u0442\u0438\u043d\u0441\u043a\u0430\u044f \u0411\u0438\u0431\u043b\u0438\u044f).\n\n### 2. Romanian Orthodox Church\n\n*   **Official Bible:** The official Bible used is the **Biblia Sinodal\u0103** (The Synodal Bible), the standard translation endorsed by the Holy Synod of the Romanian Orthodox Church.\n*   **Old Testament (OT):** The Romanian Synodal Bible, like the Russian one, relies on the **Septuagint (LXX)** for the Old Testament, including all the Deuterocanonical books (Anagignoskomena).\n*   **New Testament (NT):** The NT is based on the **Byzantine Text-Type**, consistent with all Orthodox churches. The Synodal translations are periodically revised for language clarity while maintaining textual fidelity to the Orthodox tradition.\n*   **Language:** The translation is in modern Romanian.\n\n### Summary\n\nNeither the Russian nor the Romanian Orthodox Churches use the **KJV (English)**. They rely on their own official, national-language Synodal translations, which are doctrinally consistent with the Orthodox tradition: Septuagint for the OT and the Byzantine Text-Type (close to the Textus Receptus\/Patriarchal Text) for the NT."},{"role":"u","text":"what are some differences between the Ostrog Bible and the KJV"},{"role":"a","text":"The Ostrog Bible and the King James Version (KJV) are fundamentally different in their purpose, language, textual basis, and historical context.\n\nHere are the key differences:\n\n| Feature | Ostrog Bible (1581) | King James Version (KJV) (1611) |\n| :--- | :--- | :--- |\n| **Language** | **Church Slavonic** (specifically, the old literary and liturgical language of the Eastern Slavs). | **Early Modern English** (Jacobean English). |\n| **Purpose** | Primarily intended to provide a complete, non-Roman Catholic-influenced, printed Bible in the liturgical language of the Eastern Orthodox Slavs (Ukraine, Russia, etc.), consolidating the Orthodox faith against the Uniate and Catholic counter-reformation. | Intended to provide an authoritative, common English translation for the Church of England, replacing the Bishops' Bible and other popular English versions. |\n| **Old Testament Source** | **Septuagint (LXX)**. It was a primary goal of the Ostrog Bible to use the Septuagint, which is the historical and canonical Old Testament for Orthodox Christianity. | **Masoretic Text (Hebrew\/Aramaic)**, with reference to the Greek Septuagint and Latin Vulgate. The KJV's OT follows the Jewish\/Protestant canon. |\n| **New Testament Source** | **Church Slavonic Text**, which was translated from the **Byzantine Greek Text-Type**. | **Textus Receptus (TR)**, which is a form of the **Byzantine Greek Text-Type**. |\n| **Canonical Scope** | **Eastern Orthodox Canon**. It includes all the Deuterocanonical books (Anagignoskomena) as part of the main text. | **Protestant Canon**. The Deuterocanonical books (Apocrypha) were included in a separate section between the OT and NT in the original 1611 edition, but they were not considered canonical and were later removed from most printed versions. |\n| **Date & Location** | Published in **1581** in Ostroh (modern Ukraine). | Published in **1611** in London, England. |\n| **Availability** | Historically significant, but rarely used today; its textual tradition was a key source for the later Russian **Elizabeth Bible** (1751) and eventually the **Synodal Translation** (1876). | Remains one of the most widely recognized and influential English Bibles. |\n\n### Summary of Major Differences\n\nThe biggest difference is the **language** (Church Slavonic vs. English).\n\nThe second major difference is the **Old Testament source** and **canon**:\n*   **Ostrog Bible (Orthodox)**: Used the Greek **Septuagint** and included the full **Eastern Orthodox Canon**.\n*   **KJV (Protestant)**: Used the **Hebrew Masoretic Text** and followed the **Protestant Canon** (though it initially included the Apocrypha in a separate section).\n\nThe New Testament, while both are based on the **Byzantine Text-Type**, is represented in two completely different language traditions (Church Slavonic vs. English)."}]}