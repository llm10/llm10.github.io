{"s":"Gemini","m":"gemini-flash-latest","t":1761274283,"r":[{"role":"u","text":"talk about the two versions of marmite uk and nz ?"},{"role":"a","text":"There are two distinct versions of Marmite: one from the United Kingdom (UK) and one from New Zealand (NZ), which are made by different companies using different recipes.\n\nThe two products vary primarily in their ownership, recipe, ingredients, and taste profile.\n\n### UK Marmite\n\n*   **Manufacturer:** Unilever\n*   **Origin:** Invented in 1902 in Burton upon Trent, England.\n*   **Taste and Texture:** It is described as having a **salty, powerful, and distinctive flavor** with a high concentration of free glutamic acid, which contributes to its savory (umami) taste. It is generally a sticky, dark-brown paste. Some reviews describe it as having a \"more tangy\" flavor than the New Zealand version.\n*   **Key Ingredients:** Yeast extract (the main ingredient), salt, vegetable extract, spice extracts, and celery extracts. The precise composition is a trade secret.\n\n### New Zealand Marmite\n\n*   **Manufacturer:** Sanitarium Health and Wellbeing Company.\n*   **Origin:** The company secured sole distribution rights in 1908 and began manufacturing under license in Christchurch in 1919, using a **modified recipe**.\n*   **Taste and Texture:** It is described as having a **\"weaker\" or \"less tangy\"** flavor compared to the British version. Critically, it includes **sugar and caramel**, giving it a notable **balance of salty and sweet** and making it \"significantly sweeter\" than UK Marmite. It is generally thicker and darker than the UK version.\n*   **Key Ingredients:** The modified recipe notably includes **sugar and caramel**. It also has different quantities of common ingredients, such as higher levels of **potassium**. Ingredients include yeast, sugar, salt, mineral salt (potassium chloride), color (caramel III), corn maltodextrin, iron, vitamins, herbs, and spices.\n\n### Trademark and Distribution\n\nDue to trademark laws, the two companies have exclusive rights to the name in their respective territories.\n\n*   In the UK, the British version predominates.\n*   In Australasia and the Pacific Islands (Australia and New Zealand), the Sanitarium version is the only product sold as Marmite.\n*   When distributed in the other's territory, the products are renamed: British Marmite is sold as \"**Our Mate**\" in Australia and New Zealand, and New Zealand Marmite has been sold as \"**NZ-Mite**\" in the UK.","sources":["https:\/\/en.wikipedia.org\/wiki\/Marmite","https:\/\/en.wikipedia.org\/wiki\/Marmite_(New_Zealand)","https:\/\/www.reddit.com\/r\/newzealand\/comments\/r5qq6\/new_zealand_marmite_is_a_weaker_less_tangy\/","https:\/\/www.youtube.com\/watch?v=mfbkOTOjLbg","https:\/\/www.google.com\/search?q=marmite+uk+vs+nz+ingredients+and+taste&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=difference+between+UK+Marmite+and+NZ+Marmite&client=app-vertex-grounding&safesearch=active"]}]}