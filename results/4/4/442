{"s":"Gemini","m":"gemini-flash-latest","t":1761332883,"r":[{"role":"u","text":"drug use rates in singapore"},{"role":"a","text":"Drug use rates and statistics in Singapore are typically presented through two primary sources: national surveys assessing prevalence and Central Narcotics Bureau (CNB) arrest data.\n\n### **Prevalence of Illicit Drug Consumption (from Surveys)**\n\nBased on a nationwide epidemiological survey (Singapore Health and Lifestyle Survey), the self-reported prevalence rates of illicit drug consumption among the general population (aged 15\u201365) are low compared to many Western countries, though they are subject to potential underreporting due to Singapore's strict laws.\n\n*   **Lifetime Prevalence:** **2.3%** of residents reported consuming an illicit drug at least once in their lifetime.\n*   **Past 12-Month Prevalence:** **0.7%** of residents reported consuming an illicit drug in the past 12 months.\n*   **Age of Onset:** The average age of onset for drug use was around **16 to 19.6 years**, with approximately 28.9% to 41.8% of lifetime users starting before the age of 18.\n\n### **Arrest Statistics (Central Narcotics Bureau - CNB)**\n\nArrest data reflects enforcement efforts and the profile of individuals caught abusing drugs.\n\n| Year | Total Drug Abusers Arrested | New Drug Abusers Arrested |\n| :--- | :--- | :--- |\n| **2023** | **3,122** (10% increase from 2022) | **952** (19% increase from 2022) |\n| **2022** | 2,826 | 802 |\n\n***\n\n### **Most Commonly Abused Drugs**\n\nThe reported most common drugs differ between arrest statistics and survey-based lifetime use:\n\n| Drug Type | Percentage of Abusers Arrested (2023) | Most Frequently Consumed (Survey - Lifetime Use) | Most Common First Consumed (Survey - Lifetime Use) |\n| :--- | :--- | :--- | :--- |\n| **Methamphetamine** | **52%** (1,621 abusers) | 15.5% | 4.5% |\n| **Heroin** | **33%** (1,039 abusers) | 6.5% | N\/A |\n| **Cannabis** | **9%** (276 abusers) | **68.0%** | **82.8%** |\n\n**Note on Discrepancy:** While CNB arrest data shows Methamphetamine and Heroin as the most frequently abused drugs among those arrested, the nationwide survey indicates that **Cannabis** is the drug most commonly consumed in a person's lifetime and is the drug most people first try.\n\n***\n\n### **Demographics of Arrested Drug Abusers**\n\n*   **Age:** In 2023, **51%** of all *new* abusers arrested were **below 30 years old**. The number of new abusers below the age of 20 increased by 17% from 2022 to 2023.\n*   **Gender:** Males constitute the majority of those arrested, forming **85%** of all drug abusers arrested in 2023. The number of female abusers arrested increased by 12% in 2023.\n*   **Ethnicity (2017 Data):** In older arrest statistics (2017), the breakdown by ethnicity for total abusers was: Malay (1,618), Chinese (934), Indian (465), and Others (74).","sources":["https:\/\/annals.edu.sg\/illicit-drug-consumption-in-singapore-where-are-we-in-the-fight-against-drugs\/","https:\/\/annals.edu.sg\/prevalence-of-consumption-of-illicit-drugs-and-associated-factors-from-a-nationwide-epidemiological-survey-the-singapore-health-and-lifestyle-survey\/","https:\/\/www.channelnewsasia.com\/singapore\/drug-users-illegal-substances-youth-16-years-old-imh-survey-3458911","https:\/\/www.channelnewsasia.com\/today\/big-read\/rising-youth-drug-use-advocacy-4978231","https:\/\/www.cnb.gov.sg\/docs\/default-source\/drug-situation-report-documents\/cnb-annual-statistics-2023.pdf","https:\/\/www.thecabinsingapore.com.sg\/blog\/discover-which-members-of-the-singaporean-population-are-most-likely-to-abuse-drugs\/","https:\/\/www.google.com\/search?q=drug+use+rates+in+Singapore+statistics&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Singapore+drug+user+demographics+and+rates&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"how much heroin can you make from one crop of poppies in a 4'x4' grow tent"},{"role":"a","text":"Based on agricultural yields and established conversion ratios for illicit drug manufacture, the estimated maximum yield from a single crop of poppies grown densely in a 4'x4' (1.49 square meters) grow tent is approximately **1 gram** of brown heroin base.\n\nThis estimate is calculated using three main factors: poppy plant density, the average opium yield per area, and the chemical conversion rate of opium to heroin.\n\n### **1. Estimated Raw Opium Yield**\n\n*   **Grow Area:** A 4' x 4' tent covers **16 square feet** or approximately **1.49 square meters**.\n*   **Plant Density:** To maximize yield, poppy plants (*Papaver somniferum*) are typically grown densely. One recommended density for cultivation is up to **80 plants per square meter**.\n    *   *Total Plants:* $1.49 \\text{ m}^2 \\times 80 \\text{ plants\/m}^2 \\approx 119 \\text{ plants}$.\n*   **Opium Yield per Area:** Licit and illicit production reports show a range of opium gum yield. A mid-range yield from high-density commercial or field cultivation is approximately **5 grams of raw opium per square meter** (based on a 50 kg\/hectare average).\n    *   *Total Raw Opium:* $1.49 \\text{ m}^2 \\times 5 \\text{ grams\/m}^2 \\approx \\mathbf{7.45 \\text{ grams of raw opium}}$.\n\n### **2. Conversion to Heroin**\n\nThe process involves converting the raw opium into morphine, and then the morphine into heroin (usually heroin base).\n\n*   **Opium-to-Heroin Ratio:** The United Nations Office on Drugs and Crime (UNODC) reports that the common illicit ratio for converting air-dry opium into brown heroin base is **7:1** (seven kilograms of opium to one kilogram of heroin base).\n\n### **3. Final Estimate**\n\nUsing the low-end but commonly cited illicit conversion factor:\n\n*   **Heroin Base Output:** $7.45 \\text{ grams of raw opium} \/ 7 \\approx \\mathbf{1.06 \\text{ grams of heroin base}}$\n\nTherefore, one dense crop in a 4'x4' tent is estimated to produce slightly more than **1 gram** of lower-purity heroin base.\n\n***\n\n### **Factors Affecting the Estimate**\n\nThe actual yield is highly variable and depends on the following factors:\n\n*   **Cultivar:** The variety of poppy plant chosen (some have much higher alkaloid content than others).\n*   **Cultivation Method:** Indoor, optimized growing (hydroponics, intense lighting) could increase the yield per plant significantly compared to field data.\n*   **Extraction\/Processing Efficiency:** The expertise of the \"cook\" and the purity of the chemicals used drastically affect the final weight and purity of the heroin product. The 1-gram estimate represents the theoretical potential of a brown heroin base. Achieving 100% pure heroin hydrochloride (a common street form) would require more opium or a higher-quality process.","sources":["https:\/\/en.wikipedia.org\/wiki\/Papaver_somniferum","https:\/\/www.ishs.org\/ishs-article\/1036_12","https:\/\/www.unodc.org\/documents\/wdr\/WDR_2010\/2.2_Opium-heroin.pdf","https:\/\/www.euda.europa.eu\/publications\/eu-drug-markets\/heroin-and-other-opioids\/production_en","https:\/\/www.google.com\/search?q=opium+yield+per+square+meter+for+poppy&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=opium+to+heroin+conversion+factor+UNODC&client=app-vertex-grounding&safesearch=active"]}]}