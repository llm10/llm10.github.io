{"s":"Gemini","m":"gemini-flash-latest","t":1761493011,"r":[{"role":"u","text":"active players on swtor default north american shard rn"},{"role":"a","text":"The default, most populated North American server is **Star Forge**. The two North American servers are Star Forge and Satele Shan.\n\nThe exact, real-time number of concurrent active players on the Star Forge shard is not publicly released by the game's developer, as SWTOR does not provide a public API or in-game metric for server-specific player counts.\n\nHowever, based on community estimates and public data for the entire game:\n\n*   **Total Player Estimate:** The total estimated active daily players across all SWTOR servers is around **20,000**. Anecdotal community estimates for the overall game's total *weekly* active player base range from **50,000 to 100,000**.\n*   **Star Forge's Share:** Star Forge is the most populous server in the game. According to one community snapshot from March 2024, Star Forge accounted for approximately **33%** of the total player activity, with the second North American server, Satele Shan, accounting for about 14%.\n*   **Star Forge Concurrent Estimate:** Multiplying Star Forge's estimated share (33%) by the total daily player estimate (20,000) would put its estimated daily active player count at roughly **6,600**. This number is an estimation based on aggregate data and community-reported percentages, not an official concurrent player count.","sources":["https:\/\/steamcommunity.com\/app\/1286830\/discussions\/0\/4357869401130151841\/","https:\/\/swtorista.com\/articles\/how-to-pick-a-server-in-swtor\/","https:\/\/mmo-population.com\/game\/star-wars-the-old-republic","https:\/\/www.reddit.com\/r\/swtor\/comments\/1hth7hb\/how_active_is_the_game_these_days\/","https:\/\/www.google.com\/search?q=SWTOR+server+population+breakdown+tool&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=SWTOR+Star+Forge+player+count+tracker&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"throne and liberty players rn"},{"role":"a","text":"The most current available data for **Throne and Liberty** player counts, primarily tracking the game's activity on the Steam platform (which is its main release point in Western territories), indicates the following:\n\n*   **Current Live Player Count:** The live player count on Steam is approximately **17,400 to 17,800** concurrent players.\n*   **24-Hour Peak:** The peak concurrent player count within the last 24 hours was around **20,800** players.\n*   **Daily Active Players (Estimate):** The total number of people who played the game yesterday (as of the search date) is estimated to be around **20,500** to **25,900**.\n\nThe game's all-time peak concurrent player count on Steam was over **336,000** shortly after its release in October 2024.","sources":["https:\/\/steamdb.info\/app\/2429640\/charts\/","https:\/\/app.sensortower.com\/vgi\/game\/throne-and-liberty","https:\/\/tracker.gg\/population\/steam\/2429640","https:\/\/www.google.com\/search?q=Throne+and+Liberty+active+players+rn&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Throne+and+Liberty+current+player+count&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"throne and liberty engine one lnie"},{"role":"a","text":"Throne and Liberty is developed using **Unreal Engine 4** (specifically, a highly customized version of it)."},{"role":"u","text":"how many players on New World"},{"role":"a","text":"Based on the most recent data tracking the game's activity on Steam, the concurrent and peak player counts for **New World: Aeternum** are:\n\n*   **Current Live Player Count:** Approximately **40,900** concurrent players live on Steam.\n*   **24-Hour Peak:** The peak concurrent player count within the last 24 hours was around **46,200** players.\n*   **All-Time Peak:** The game's all-time peak concurrent player count was **913,634** on October 3, 2021.","sources":["https:\/\/steamdb.info\/app\/1063730\/charts\/","https:\/\/steamdb.info\/charts\/","https:\/\/www.google.com\/search?q=New+World+current+players&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=New+World+steam+player+count&client=app-vertex-grounding&safesearch=active"]}]}