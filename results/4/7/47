{"s":"Grok","r":[["u","t","what rights to creators give away and maintain on reddit, facebook, youtube, twitter. keep it short"],["a","t","- **Reddit**: Creators give away a license for Reddit to use, copy, and distribute content; they maintain ownership and can delete their posts.\n\n- **Facebook**: Creators give away a worldwide license for Facebook to use and share content; they maintain ownership but lose control over how it's used by the platform.\n\n- **YouTube**: Creators give away a license for YouTube to host, display, and monetize content; they maintain copyright ownership and can monetize or remove it themselves.\n\n- **Twitter (now X)**: Creators give away a license for Twitter to use and display content globally; they maintain ownership and can delete tweets."],["u","t","are AI companies allowed to train on copyrighted material without license\/consent?"],["a","t","AI companies are generally not allowed to train on copyrighted material without a license or consent, as this could constitute copyright infringement under laws like the US Copyright Act. However, they may claim defenses such as \"fair use\" if the use is transformative, limited, and for purposes like research\u2014though this is debated and subject to ongoing lawsuits (e.g., against OpenAI and Stability AI). Outcomes vary by jurisdiction, and no definitive global ruling exists yet."]]}