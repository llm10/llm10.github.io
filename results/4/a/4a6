{"s":"Gemini","m":"gemini-flash-latest","t":1761812008,"r":[{"role":"u","text":"how much input lag from vsync 60 on a game that runs at 60% gpu"},{"role":"a","text":"The input lag added by V-Sync at 60 FPS on a 60Hz monitor is a dynamic range, but in the scenario you describe (a game running at only **60% GPU utilization**), the system is *not* GPU-limited, which places the input lag at the lower end of the V-Sync spectrum.\n\nThe theoretical added input lag from V-Sync (Vertical Synchronization) is typically between **0 and 16.7 milliseconds (ms)**, which corresponds to the time it takes for a single frame to be displayed on a 60Hz monitor (1 second \/ 60 frames \u2248 16.7ms).\n\nHere is a breakdown of the input lag in your specific situation:\n\n### V-Sync 60 FPS with Double Buffering\n\nAssuming standard **Double Buffering** is used, V-Sync ensures the GPU waits for the monitor's refresh cycle before presenting a new frame.\n\n*   **Average V-Sync Latency:** The additional delay is generally the time it takes to render half a frame, which is approximately **8.3 ms** (half of 16.7ms).\n*   **Total Latency:** This 8.3ms is *added* to the pre-existing base latency, which includes:\n    *   The time it takes for your input device (mouse\/keyboard) to send the signal.\n    *   The time it takes for the CPU to process the input and send draw commands to the GPU.\n    *   The time it takes for the GPU to render the frame (which, at 60 FPS, is 16.7ms).\n    *   Monitor display lag.\n\nSince your GPU is only at **60% utilization**, it means the game is running well within the 16.7ms budget for each frame, and the GPU is waiting for the V-Sync signal. This waiting period is what introduces the input lag. The 60% utilization confirms you are *not* in a GPU-bottlenecked state, which avoids the *worst-case* input lag scenarios.\n\n### V-Sync 60 FPS with Triple Buffering\n\nIf **Triple Buffering** is active, V-Sync uses an extra buffer to prevent the frame rate from dropping when the GPU can't keep up.\n\n*   **Triple Buffering Latency:** This can add an additional frame of latency to the pipeline, typically increasing the total V-Sync-related delay to between **16.7 ms and 33.4 ms**.\n\n### The Worst-Case Scenario (Which you are avoiding)\n\nIt is important to note that the very high input lag reported in some tests (up to **80 ms**) occurs when the GPU is heavily bottlenecked (e.g., **100% utilization**) while the frame rate is locked to 60 FPS. In that scenario, the GPU is constantly trying to catch up, leading to a long queue of buffered frames and a huge spike in latency.\n\nSince your GPU utilization is only **60%**, your system is likely experiencing the lower, more typical V-Sync input lag of around **8.3 ms to 16.7 ms (added)**, depending on whether double or triple buffering is in effect.","sources":["https:\/\/hardforum.com\/threads\/vsync-input-lag-questions.1541896\/","https:\/\/forums.anandtech.com\/threads\/v-sync-and-input-lag.2537293\/","https:\/\/www.youtube.com\/watch?v=dPMHEyz38TM","https:\/\/www.google.com\/search?q=V-sync+input+lag+formula&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=input+lag+from+vsync+60+at+60+fps&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=V-sync+60+FPS+input+lag+gpu+utilization&client=app-vertex-grounding&safesearch=active"]}]}