{"s":"Gemini","m":"gemini-flash-latest","t":1761859397,"r":[{"role":"u","text":"is homage x starter a legal partnership one line"},{"role":"a","text":"Yes, Homage and Starter have an \"Official HOMAGE x Starter Collaboration\" for licensed apparel like jackets, indicating a legal business relationship.","sources":["https:\/\/www.homage.com\/collections\/starter-jackets","https:\/\/www.google.com\/search?q=Homage+Starter+collaboration+status&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Homage+x+Starter+legal+partnership&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"if I started my own bank can I lend out ten times as much money as I have"},{"role":"a","text":"The idea that a bank can lend out ten times as much money as it has comes from the old formula for the **money multiplier** in a fractional-reserve banking system.\n\nThe formula is $1\/\\text{Reserve Requirement}$. If the reserve requirement were 10% (0.10), the multiplier would be $1\/0.10 = 10$. This means that for every dollar of reserves in the *entire banking system*, the money supply could theoretically expand by ten dollars through the cycle of lending and redepositing.\n\nHowever, here is the unfiltered reality for a single, newly started bank today:\n\n1.  **Direct Lending Limit:** An *individual* bank cannot simply lend out 10 times its initial capital or deposits. A bank makes a loan by crediting the borrower's account, which creates a new deposit. This money will likely be spent and deposited in a *different* bank, meaning the first bank loses those reserves (or cash) almost immediately.\n2.  **Reserve Requirements are Often Zero:** In many major economies, including the United States, central banks like the Federal Reserve have reduced the reserve requirement to **0%** (since March 2020). This technically makes the old multiplier formula infinite, but in practice, it's irrelevant and not the real constraint.\n3.  **The Real Constraint is Capital:** Today, the main thing limiting a bank's lending is **capital requirements**. Regulators require banks to hold a certain amount of capital (equity) relative to their risk-weighted assets (loans are assets). This ensures the bank can absorb losses. The amount you can lend is a multiple of your *capital*, not your deposits, and that multiple is based on the riskiness of the loans, not a simple 10-to-1 ratio.\n4.  **Credit Creation:** When a bank issues a loan, it essentially creates a new deposit (money) \"out of thin air\" on its balance sheet (a loan asset and a deposit liability). The true constraint on this credit creation is the need to maintain capital requirements and liquidity for withdrawals, not a direct mechanical limit based on its physical cash.\n\nTherefore, while the *system as a whole* can generate a massive expansion of money based on reserves, your **single, new bank** is limited by the amount of **capital** you have to satisfy regulatory requirements, not by a simple 10x multiplier on your deposits.","sources":["https:\/\/www.investopedia.com\/articles\/investing\/022416\/why-banks-dont-need-your-money-make-loans.asp","https:\/\/noblegoldinvestments.com\/learn\/blog\/fractional-reserve-lending-explained\/","https:\/\/www.sofi.com\/learn\/content\/what-is-fractional-reserve-banking\/","https:\/\/smartasset.com\/checking-account\/what-is-fractional-reserve-banking","https:\/\/www.quora.com\/Can-a-bank-lend-more-money-than-it-has","https:\/\/www.quora.com\/What-is-the-maximum-amount-of-money-that-a-bank-can-loan-out-if-a-large-deposit-is-made","https:\/\/www.google.com\/search?q=fractional-reserve+banking+reserve+requirements+lending+limit&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=how+much+can+a+new+bank+lend+out&client=app-vertex-grounding&safesearch=active"]}]}