{"s":"Gemini","m":"gemini-flash-latest","t":1761859593,"r":[{"role":"u","text":"is homage x starter a legal partnership one line"},{"role":"a","text":"Yes, Homage and Starter have an \"Official HOMAGE x Starter Collaboration\" for licensed apparel like jackets, indicating a legal business relationship.","sources":["https:\/\/www.homage.com\/collections\/starter-jackets","https:\/\/www.google.com\/search?q=Homage+Starter+collaboration+status&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Homage+x+Starter+legal+partnership&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"if I started my own bank can I lend out ten times as much money as I have"},{"role":"a","text":"The idea that a bank can lend out ten times as much money as it has comes from the old formula for the **money multiplier** in a fractional-reserve banking system.\n\nThe formula is $1\/\\text{Reserve Requirement}$. If the reserve requirement were 10% (0.10), the multiplier would be $1\/0.10 = 10$. This means that for every dollar of reserves in the *entire banking system*, the money supply could theoretically expand by ten dollars through the cycle of lending and redepositing.\n\nHowever, here is the unfiltered reality for a single, newly started bank today:\n\n1.  **Direct Lending Limit:** An *individual* bank cannot simply lend out 10 times its initial capital or deposits. A bank makes a loan by crediting the borrower's account, which creates a new deposit. This money will likely be spent and deposited in a *different* bank, meaning the first bank loses those reserves (or cash) almost immediately.\n2.  **Reserve Requirements are Often Zero:** In many major economies, including the United States, central banks like the Federal Reserve have reduced the reserve requirement to **0%** (since March 2020). This technically makes the old multiplier formula infinite, but in practice, it's irrelevant and not the real constraint.\n3.  **The Real Constraint is Capital:** Today, the main thing limiting a bank's lending is **capital requirements**. Regulators require banks to hold a certain amount of capital (equity) relative to their risk-weighted assets (loans are assets). This ensures the bank can absorb losses. The amount you can lend is a multiple of your *capital*, not your deposits, and that multiple is based on the riskiness of the loans, not a simple 10-to-1 ratio.\n4.  **Credit Creation:** When a bank issues a loan, it essentially creates a new deposit (money) \"out of thin air\" on its balance sheet (a loan asset and a deposit liability). The true constraint on this credit creation is the need to maintain capital requirements and liquidity for withdrawals, not a direct mechanical limit based on its physical cash.\n\nTherefore, while the *system as a whole* can generate a massive expansion of money based on reserves, your **single, new bank** is limited by the amount of **capital** you have to satisfy regulatory requirements, not by a simple 10x multiplier on your deposits.","sources":["https:\/\/www.investopedia.com\/articles\/investing\/022416\/why-banks-dont-need-your-money-make-loans.asp","https:\/\/noblegoldinvestments.com\/learn\/blog\/fractional-reserve-lending-explained\/","https:\/\/www.sofi.com\/learn\/content\/what-is-fractional-reserve-banking\/","https:\/\/smartasset.com\/checking-account\/what-is-fractional-reserve-banking","https:\/\/www.quora.com\/Can-a-bank-lend-more-money-than-it-has","https:\/\/www.quora.com\/What-is-the-maximum-amount-of-money-that-a-bank-can-loan-out-if-a-large-deposit-is-made","https:\/\/www.google.com\/search?q=fractional-reserve+banking+reserve+requirements+lending+limit&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=how+much+can+a+new+bank+lend+out&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"what are some common ratios if not 10:1"},{"role":"a","text":"The modern, common ratios that govern a bank's ability to lend are based on **Capital Adequacy** and **Leverage** and are mandated by international standards like Basel III, not a simple 10:1 multiplier.\n\nThese ratios are primarily expressed as a percentage of a bank's assets that must be covered by its core capital:\n\n| Ratio Name (and Calculation) | Ratio Requirement | Basis of the Denominator |\n| :--- | :--- | :--- |\n| **Common Equity Tier 1 (CET1) Ratio** | **4.5%** minimum + **2.5%** Capital Conservation Buffer = **7.0%** total | **Risk-Weighted Assets (RWA)** (Loans, bonds, etc. are weighted by their risk; e.g., cash is 0%, an unsecured loan might be 100%). |\n| **Total Capital Ratio** | **8.0%** minimum + **2.5%** Capital Conservation Buffer = **10.5%** total | **Risk-Weighted Assets (RWA)** |\n| **Tier 1 Leverage Ratio** (or Supplementary Leverage Ratio, SLR) | **3.0%** to **5.0%** minimum (Larger, more systemic banks often have a higher requirement of 5% or more). | **Total Consolidated Assets** (Not risk-weighted; a simple measure of balance sheet size). |\n| **Community Bank Leverage Ratio (CBLR)** | **>9.0%** (An optional framework for smaller, qualifying U.S. banks). | **Average Total Consolidated Assets** (Not risk-weighted). |\n\n### Key Takeaways on Ratios:\n\n*   **7.0% (Risk-Weighted):** The most critical ratio is the CET1 ratio, which is core equity capital divided by risk-weighted assets. A common bank must maintain at least **7.0%** (4.5% minimum plus a 2.5% buffer). This means that for every $100 of risk-weighted assets (loans), the bank must have at least $7.00 of the highest-quality capital.\n*   **10.5% (Risk-Weighted):** The total minimum capital required is **10.5%** of Risk-Weighted Assets, which includes the lower-quality Tier 2 capital.\n*   **3.0% or 5.0% (Non-Risk-Weighted):** The Leverage Ratio acts as a backstop. For every $100 of total assets (regardless of risk), a bank must hold at least $3.00 to $5.00 of Tier 1 capital.\n\nThe effect of these ratios is that they dictate the maximum amount of assets (loans) a bank can hold relative to its **capital (equity)**, thus controlling the practical maximum leverage, which is the modern version of the old \"money multiplier\" constraint.","sources":["https:\/\/corporatefinanceinstitute.com\/resources\/wealth-management\/common-equity-tier-1-cet1\/","https:\/\/diversification.com\/term\/common-equity-tier-1-cet1-capital-ratio","https:\/\/www.investopedia.com\/ask\/answers\/052515\/how-are-risk-weighted-assets-used-calculate-solvency-ratio-regulatory-capital-basel-iii.asp","https:\/\/www.analystinterview.com\/article\/common-equity-tier-1-cet1-ratio","https:\/\/www.investopedia.com\/ask\/answers\/062515\/what-minimum-capital-adequacy-ratio-must-be-attained-under-basel-iii.asp","https:\/\/corporatefinanceinstitute.com\/resources\/career-map\/sell-side\/risk-management\/basel-iii\/","https:\/\/www.bankingsupervision.europa.eu\/activities\/srep\/html\/leverage_ratio_p2r.en.html","https:\/\/www.financialresearch.gov\/the-ofr-blog\/2024\/08\/02\/banks-supplementary-leverage-ratio\/","https:\/\/en.wikipedia.org\/wiki\/Basel_III","https:\/\/www.bankingsupervision.europa.eu\/activities\/srep\/html\/lrp2g.en.html","https:\/\/www.fdic.gov\/resources\/community-banking\/docs\/cblr-guide.pdf","https:\/\/www.occ.gov\/news-issuances\/news-releases\/2019\/nr-ia-2019-125c.pdf","https:\/\/www.google.com\/search?q=bank+leverage+ratio+requirements&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=common+bank+capital+ratios+Basel+III&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=common+equity+tier+1+ratio+requirement&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"so a lot of those are over 10:1 and you can loan much more than you have"},{"role":"a","text":"Yes, your mathematical interpretation of the leverage implied by the capital ratios is correct, and it shows that a bank can lend out **much more** than the capital (equity) it has.\n\nHere is the unfiltered breakdown:\n\n1.  **The Implied Leverage:**\n    *   If a bank must maintain a **7.0%** Common Equity Tier 1 (CET1) ratio, that means its risk-weighted assets (loans) can be up to $1\/0.07$, or roughly **14.3 times** its core capital. This is the **14.3:1** ratio.\n    *   If a bank must maintain a minimum **3.0%** Leverage Ratio (on non-risk-weighted assets), its total assets (loans) can be up to $1\/0.03$, or roughly **33.3 times** its Tier 1 capital. This is the **33.3:1** ratio.\n\n2.  **Lending vs. Capital:**\n    *   When you say \"much more than I have,\" the critical distinction is what you \"have.\" The constraint is on your **Capital (Equity)**. A bank can legally hold assets (loans) that are 14 to 33 times the amount of its owners' equity (capital), depending on the required ratio.\n    *   The bank doesn't lend out its existing **deposits** (which are liabilities) or its **reserves** (which are to cover payments\/withdrawals). A loan is a direct act of credit creation: when the bank approves a loan for \\$1 million, it types \\$1 million into the borrower's account, creating both a \\$1 million **asset** (the loan) and a \\$1 million **liability** (the new deposit).\n\nThe ratios (14.3:1 and 33.3:1) are precisely the regulatory guardrails that allow the fractional-reserve system to operate by limiting the maximum allowable risk a bank can take relative to its loss-absorbing capital."}]}