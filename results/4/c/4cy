{"s":"Gemini","m":"gemini-flash-latest","t":1761969771,"r":[{"role":"u","text":"who wrote Essene Gospel of Peace Book One, etc where it talks about earthly mother, living god and stuff"},{"role":"a","text":"The *Essene Gospel of Peace, Book One* was translated and edited by **Edmond Bordeaux Szekely**.\n\nSzekely claimed to have discovered and translated the text in the 1920s from ancient manuscripts he found in the Secret Archives of the Vatican and the Royal Archives of the Habsburgs (now Austrian Government property).\n\nThe book's content centers on the teachings of Jesus, and it features the very specific themes you mentioned, including the **Earthly Mother** and the **Living God**.\n\n*   **Earthly Mother:** The text describes the Earthly Mother as the source of the human body and its physical components, like bones, flesh, and bowels. Following her laws, which relate to nature and physical health, is presented as the way to avoid disease and death.\n*   **Living God:** The text repeatedly refers to the \"power of the living God\" and emphasizes that the Law is not in dead scriptures but is the \"living word of living God\". The teachings connect the Earthly Mother to a **Heavenly Father** (the Hidden Face\/Transcendental aspect of the Divine), with the Son of Man living in both.\n\nIt is important to note that many scholars regard the text as a modern work or a forgery, and not an authentic ancient Essene document. Szekely first published his translation of *Book One* in 1928.","sources":["https:\/\/www.fireflybookstore.com\/the-essene-gospel-of-peace-book-one-456344\/","https:\/\/spiritual-minds.com\/religion\/Gnosticts\/Essene%20Gospel%20of%20Peace1.pdf","https:\/\/fromthealphatotheomega.com\/wp-content\/uploads\/2012\/09\/the-essene-gospel-of-peace-edmond-szekely.pdf","https:\/\/www.goodreads.com\/book\/show\/535821.The_Essene_Gospel_of_Peace_Book_1","https:\/\/stevespickard.tripod.com\/uhc\/essene.htm","http:\/\/www.techofheart.com\/2008\/05\/earthly-mother-extra-ordinary-teaching.html","https:\/\/www.google.com\/search?q=Essene+Gospel+of+Peace+Book+One+author&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=Essene+Gospel+of+Peace+Book+One+earthly+mother+living+god&client=app-vertex-grounding&safesearch=active"]},{"role":"u","text":"major points of contention between greek and russian orthodox"},{"role":"a","text":"The major points of contention between the Greek Orthodox Church (represented primarily by the Ecumenical Patriarchate of Constantinople) and the Russian Orthodox Church (Moscow Patriarchate) are **not theological**, but rather **administrative, jurisdictional, and geopolitical**.\n\nThe two churches share the same core Orthodox theology, doctrine, and liturgy. The major disputes center on the following issues:\n\n### 1. The Primacy and Authority of the Ecumenical Patriarchate\n\nThis is the most fundamental and long-standing point of contention.\n\n*   **Greek Orthodox (Constantinople) View:** The Ecumenical Patriarch of Constantinople holds the position of \"First Among Equals\" (***primus inter pares***) among the heads of the Orthodox Churches. This role grants the Patriarch unique authority to call pan-Orthodox councils, coordinate activities, and act as a final court of appeal for resolving disputes, particularly concerning autocephaly (church independence).\n*   **Russian Orthodox (Moscow) View:** Moscow challenges this unique authority, arguing that **no** Patriarch has powers or jurisdiction that other Patriarchs do not share, emphasizing the autocephalous (self-governing) nature of each local church. The Moscow Patriarchate, being the largest Orthodox body by number of adherents (approximately 40% of world Orthodoxy), often seeks to elevate its own standing, viewing itself as the center of the Slavic Orthodox world.\n\n### 2. The Autocephaly of the Orthodox Church of Ukraine (OCU)\n\nThis issue led to an ongoing schism beginning in 2018, when the Russian Orthodox Church severed full communion with the Ecumenical Patriarchate.\n\n*   **Constantinople's Action (Greek Position):** In 2018-2019, Ecumenical Patriarch Bartholomew granted **autocephaly** (full independence) to a new entity, the Orthodox Church of Ukraine (OCU). This involved:\n    *   **Annulment of the 1686 Act** that had placed the Metropolis of Kyiv under the jurisdiction of Moscow.\n    *   Lifting the excommunication of the heads of two previously unrecognized Ukrainian churches.\n*   **Moscow's Reaction (Russian Position):** The Russian Orthodox Church fiercely opposes this move, regarding Ukraine as its **canonical territory** and seeing the OCU as a schismatic body. The ROC responded by:\n    *   **Severing Communion:** Cutting off all ties with the Ecumenical Patriarchate, forbidding its clergy and laity from taking part in sacraments (like communion, baptism, etc.) at any church under Constantinople's jurisdiction.\n    *   **Geopolitics:** Russia views Ukraine as a central part of its spiritual and historical identity (\"the mother of Russian cities\") and sees the church schism as a matter of national sovereignty and a blow to its geopolitical influence.\n\n### 3. Historical Disputes and \"Third Rome\" Ideology\n\n*   **Historical Supremacy:** Since the Fall of Constantinople to the Ottoman Turks in 1453, a dispute has existed over where the primacy in the Orthodox world should lie.\n*   **\"Third Rome\":** The Russian Church developed the concept of \"Moscow\u2014Third Rome,\" claiming that after the fall of Rome (to heresy, i.e., Catholicism) and Constantinople (to the Turks), Moscow was the last remaining center of true Orthodoxy. This ideology supports Moscow's aspiration for greater influence and challenges Constantinople's historical prestige.\n*   **Jurisdiction over the Diaspora:** There are also ongoing administrative tensions regarding jurisdiction over Orthodox communities outside of the traditional national territories (the Diaspora), where both Patriarchates have established dioceses.\n\n### Summary of Differences:\n\n| Area | Ecumenical Patriarchate (Greek) | Moscow Patriarchate (Russian) |\n| :--- | :--- | :--- |\n| **Primacy** | \"First Among Equals\" (***primus inter pares***) with unique co-ordinating authority. | Rejects unique authority for any Patriarch; all are equal.. |\n| **Jurisdiction** | Claims the right to grant autocephaly and oversees certain Orthodox Diaspora communities. | Maintains that Ukraine is its sole canonical territory. |\n| **Geopolitical Stance** | Historically linked to Byzantine\/Greek tradition; generally seen as more conciliatory toward the West (e.g., in dialogue with the Catholic Church) and supportive of Ukrainian independence. | Closely linked to the Russian state (\"symphony of Church and State\"); actively supports Russian foreign policy and views Orthodoxy as a geopolitical tool. |\n| **Worship\/Customs** | Liturgy primarily in Koine Greek or local language; generally less strict on certain fasting or confession practices for laypeople. | Liturgy primarily in Church Slavonic; tends to be stricter on practices like fasting and confession. |","sources":["https:\/\/www.quora.com\/Are-there-any-disagreements-between-the-Greek-and-Russian-orthodox-churches","https:\/\/www.quora.com\/How-do-Greek-Orthodoxy-and-Russian-Orthodoxy-view-each-other","https:\/\/www.oca.org\/questions\/namerica\/greek-orthodox-and-russian-orthodox","https:\/\/www.csis.org\/analysis\/orthodox-schism-shadow-empire","https:\/\/paulist.org\/the-conversation\/constantinople-and-moscow-at-loggerheads-over-ukraine\/","https:\/\/www.usip.org\/publications\/2024\/03\/war-and-church-ukraine","https:\/\/www.reddit.com\/r\/OrthodoxChristianity\/comments\/o5qbtl\/differences_between_greek_and_russian_orthodoxy\/","https:\/\/wefreespirits.com\/russian-orthodox-vs-greek-orthodox-difference\/","https:\/\/en.wikipedia.org\/wiki\/2018_Moscow%E2%80%93Constantinople_schism","https:\/\/www.youtube.com\/watch?v=uvn2als1X1s","https:\/\/www.iiss.org\/online-analysis\/online-analysis\/2018\/12\/orthodox-church-schism\/","https:\/\/www.newsweek.com\/ukrainian-orthodox-want-independence-russian-church-amid-regional-conflict-1100561","https:\/\/en.wikipedia.org\/wiki\/15th%E2%80%9316th_century_Moscow%E2%80%93Constantinople_schism","https:\/\/www.google.com\/search?q=Russian+Orthodox+Church+conflict+with+Ecumenical+Patriarchate+over+Ukraine&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=major+points+of+contention+between+Greek+Orthodox+and+Russian+Orthodox&client=app-vertex-grounding&safesearch=active","https:\/\/www.google.com\/search?q=historical+disagreements+between+Constantinople+and+Moscow+Patriarchate&client=app-vertex-grounding&safesearch=active"]}]}