{"s":"Grok","m":"grok-3-mini","t":1761995392,"r":[{"role":"u","text":"just how popular was Frankism among Jews in Europe"},{"role":"a","text":"Frankism, a messianic movement founded by Jacob Frank in the mid-18th century, was a fringe phenomenon among European Jews and never achieved widespread popularity. At its peak in the 1750s and 1760s, it attracted a few thousand followers, mainly in Poland, parts of the Habsburg Empire, and the Ottoman territories, drawn from disillusioned or marginalized Jewish communities influenced by earlier Sabbatean ideas.\n\nHowever, it faced strong opposition from mainstream Jewish leaders and institutions, who viewed it as heretical due to its unorthodox practices, including elements of mysticism, antinomianism, and even adoption of Christian rituals. Frank's own conversion to Catholicism in 1759, along with many of his followers, further isolated the movement from Jewish society. By the late 18th century, Frankism had largely dissipated, with estimates suggesting it never exceeded a small fraction of the overall Jewish population in Europe, which numbered in the millions at the time. It remained a localized and short-lived curiosity rather than a mass movement."}]}