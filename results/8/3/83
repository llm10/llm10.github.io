{"s":"Grok","r":[["u","t","invent a new script for Mchale's navy. NOW!!!"],["a","t","**McHale's Navy: Operation Banana Peel**\n\n**FADE IN:**\n\n**EXT. PT BOAT 73 - PACIFIC OCEAN - DAY**\n\nThe sun beats down on the weathered PT boat as it bobs in the waves. LIEUTENANT COMMANDER QUINTON McHALE, rugged and smirking, stands at the helm with his crew: ENSIGN CHARLES PARKER, the bumbling straight-man; LESTER GRUBER, the scheming con artist; VIRGIL EDWARDS, the klutzy mechanic; and the rest of the ragtag bunch lounging around with cigarettes and coffee.\n\nMcHALE  \n(Grinning) Alright, you swabs, we've got a hot tip from the natives. Word is, the Japs have stashed a crate of prime Japanese sake on that island over there. If we snag it, we can trade it for some real hooch back at base. Who's in?\n\nGRUBER  \n(Eyes lighting up) Count me in, skipper! Last time we pulled a stunt like this, I ended up with a pocketful of pearls. What's the plan?\n\nPARKER  \n(Nervously adjusting his uniform) Sir, with all due respect, this sounds like another one of your... unorthodox operations. The brass'll have our hides if we get caught!\n\nMcHALE  \n(Clapping Parker on the back) Relax, Chuckles. It's not stealing if it's for the war effort. Besides, what's the Navy without a little fun? Edwards, get the engine prepped. We're going in quiet.\n\n**CUT TO:**\n\n**EXT. JAPANESE-OCCUPIED ISLAND - TWILIGHT**\n\nThe crew sneaks ashore, dressed in ragged camouflage. Gruber carries a sack, Edwards trips over a root, causing a comically loud crash. In the distance, Japanese soldiers patrol.\n\nEDWARDS  \n(Whispering, panicked) Oh, crud! I think I just woke up the whole island!\n\nGRUBER  \n(Whacking Edwards) Shut your yap! There it is\u2014the crate under that palm tree.\n\nThey creep forward. McHale pries open the crate with a crowbar, revealing not sake, but a bunch of rotten bananas.\n\nMcHALE  \n(Disbelieved) Bananas? What the hell? This is a setup!\n\nSuddenly, alarms blare. Japanese soldiers charge from the bushes.\n\nPARKER  \n(Yelling) Abort! Abort! Back to the boat!\n\nChaos ensues: Edwards slips on a banana peel and bowls over two soldiers, Gruber grabs a handful of bananas to throw as improvised weapons, and McHale fires off covering shots with his sidearm.\n\n**CUT TO:**\n\n**INT. PT BOAT 73 - NIGHT**\n\nBack on the boat, the crew laughs hysterically as they speed away, bananas scattered everywhere.\n\nMcHALE  \n(Raising a banana like a toast) To the greatest Navy in the world. Next time, we aim for the real booze!\n\nGRUBER  \n(Chuckling) Yeah, but these bananas might make a helluva pie.\n\nPARKER  \n(Exasperated) I swear, one of these days...\n\n**FADE OUT.**"]]}