{"s":"Gemini","r":[["u","t","php handle $d->loadXML($r); without a fatal error if $r is empty"],["a","t","To handle a `DOMDocument::loadXML()` call without a fatal error if the input string `$r` is empty, especially in PHP 8.1 and later, you should check if the string is empty before attempting to load the XML.\n\nIn PHP 8.1+, passing an empty string to `DOMDocument::loadXML()` will result in a `ValueError: DOMDocument::loadXML(): Argument #1 ($source) must not be empty`, which is a fatal error. While earlier PHP versions might only generate a warning that cannot be handled by `libxml`'s error handling functions, directly checking for an empty string is the most robust solution.\n\nHere's how you can handle it:\n\n```php\n<?php\n\n$d = new DOMDocument();\n$r = ''; \/\/ This could be an empty string from your source\n\nif (!empty($r)) {\n    \/\/ Disable libxml errors and allow user to fetch them later\n    libxml_use_internal_errors(true);\n\n    \/\/ Attempt to load the XML\n    $d->loadXML($r);\n\n    \/\/ Get all errors\n    $errors = libxml_get_errors();\n    if (!empty($errors)) {\n        \/\/ Handle XML parsing errors\n        foreach ($errors as $error) {\n            \/\/ Log or display error details\n            error_log(\"XML Error: \" . $error->message);\n        }\n        libxml_clear_errors(); \/\/ Clear errors after handling\n        \/\/ Optionally, throw an exception or return false to indicate failure\n    }\n    libxml_use_internal_errors(false); \/\/ Restore default error handling\n} else {\n    \/\/ Handle the case where $r is empty\n    error_log(\"Error: XML string is empty. Cannot load.\");\n    \/\/ Optionally, throw a custom exception or return false\n}\n\n?>\n```"],["u","t","libxml_use_internal_errors(true); didnt help, was still fatal"],["a","t","You are correct. `libxml_use_internal_errors(true)` will **not** prevent a `ValueError` when `DOMDocument::loadXML()` is called with an empty string in PHP 8.1 and later.\n\nThe `ValueError` is a new type of error introduced in PHP 8 that signifies an issue with the arguments passed to a function, rather than an issue with parsing the content itself. `libxml_use_internal_errors()` only deals with errors that `libxml` generates during XML parsing (e.g., malformed XML, missing tags), not with PHP's argument validation.\n\nTherefore, the only robust way to prevent a fatal error when `$r` might be an empty string is to **explicitly check if the string is empty before calling `loadXML()`**.\n\nHere's the corrected and necessary approach:\n\n```php\n<?php\n\n$d = new DOMDocument();\n$r = ''; \/\/ This is the problematic empty string\n\n\/\/ ALWAYS check if the string is empty BEFORE attempting to load XML\nif (empty($r)) {\n    \/\/ Handle the empty string case here\n    echo \"Error: The XML string is empty. Cannot load.\\n\";\n    \/\/ You might want to log this, throw a custom exception, or return false.\n    \/\/ Example:\n    \/\/ throw new InvalidArgumentException(\"XML source string cannot be empty.\");\n} else {\n    \/\/ Only attempt to load XML if the string is not empty\n    libxml_use_internal_errors(true); \/\/ Still good practice for actual XML parsing errors\n\n    if (@$d->loadXML($r) === false) { \/\/ Use @ to suppress potential warnings from libxml in older PHP versions if applicable\n        $errors = libxml_get_errors();\n        foreach ($errors as $error) {\n            echo \"XML Parsing Error: \" . $error->message . \" at line \" . $error->line . \"\\n\";\n        }\n        libxml_clear_errors();\n    }\n\n    libxml_use_internal_errors(false); \/\/ Restore default error handling\n}\n\n?>\n```\n\n**Key Takeaway:**\n\n*   `libxml_use_internal_errors()` helps catch *XML parsing errors* (e.g., malformed XML).\n*   It **does not** help with `ValueError`s that arise from passing invalid *arguments* (like an empty string where a non-empty one is expected) to PHP functions in newer PHP versions.\n*   The only solution for an empty string is a `!empty($r)` or `strlen($r) > 0` check."]]}