{"s":"Gemini","m":"gemini-2.5-flash-preview-05-20","t":1749661355,"r":[["u","t","pantsir missile varieties and costs"],["a","t","The Pantsir missile system is a family of self-propelled, medium-range surface-to-air missile and anti-aircraft artillery systems produced by KBP Instrument Design Bureau in Russia.\n\n**Pantsir Missile Varieties:**\nSeveral variants of the Pantsir system have been developed, each with improvements in range, detection capabilities, and missile types:\n*   **Pantsir-S1 (SA-22 Greyhound):** This was the first widely deployed version, entering service in 2003. It typically uses twelve 57E6 surface-to-air guided missiles and two 30mm automatic guns. The 57E6 missile has a range of up to 20 km and an altitude of 10 km.\n*   **Pantsir-S2:** This variant features new missiles that increase the system's range from 20 km to 30 km.\n*   **Pantsir-SM:** This variant significantly increases the target detection range from 40 km to 75 km and the engagement range from 20 km to 40 km. It uses a new high-speed, extended-range missile and is fitted to a new 8x8 Kamaz truck chassis.\n*   **Pantsir-SM-SV:** An advanced variant equipped with a new Active Electronically Scanned Array (AESA) radar, capable of detecting targets up to 60 km away. It can be equipped with various missile types, including the standard 57E6, an upgraded 57E6M with a 40 km range and higher speed, and compact TKB-1055 missiles. The TKB-1055 is optimized for cost-effective engagement of numerous low-value targets like drone swarms.\n*   **Pantsir-SMD-E:** This is a newer edition of the Pantsir family, which, unlike previous versions, has reportedly dropped the 30mm dual guns in favor of small and medium interceptor missiles. It can carry TKB-1055 missiles with an 8 km range and 57E6 missiles with an 18 km range. A single launcher can be loaded with up to 48 TKB-1055 missiles.\n*   **Pantsir-M\/EM:** A naval version designed to replace the Kashtan\/Kortik CIWS on Russian Navy warships. The Pantsir-M can simultaneously engage four targets with four missiles up to 20 km in range and 15 km in altitude. It can be fitted with missiles from both Pantsir-S and Hermes-K air defense systems, with the latter having a maximum firing range of up to 100 km.\n\n**Costs:**\nThe unit cost of the Pantsir system varies depending on the variant and export configurations. The export unit cost for the Pantsir-S1 is estimated to be between US$13.15 million and US$14.67 million. The average unit cost of a Pantsir system is around US$15 million."]]}