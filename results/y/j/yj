{"s":"Gemini","m":"gemini-2.5-flash","t":1751320901,"r":[["u","t","us senate 60 vote traditional rule"],["a","t","The US Senate's \"60-vote traditional rule\" refers to the requirement of 60 votes to end debate on most legislation, a procedure known as \"cloture\". This rule is associated with the filibuster, which is a tactic used by a minority of senators to delay or block a vote on a bill, resolution, or other debatable question.\n\nHistorically, the Senate had unlimited debate, allowing senators to indefinitely delay a bill from coming to a vote. In 1917, Senate Rule XXII was adopted, enabling a two-thirds majority to invoke cloture and limit debate. This threshold was reduced in 1975 to three-fifths of all duly chosen and sworn senators, which typically translates to 60 out of 100 senators.\n\nWhile a simple majority of 51 votes is needed to pass a bill once debate has ended, the 60-vote threshold for cloture effectively makes it the de facto minimum required for passing most legislation in the Senate. There are exceptions to this rule, particularly for presidential appointments, where the filibuster has been removed for most nominees, including Supreme Court appointees. Additionally, certain measures like budget reconciliation bills are exempt from the 60-vote rule and can pass with a simple majority."],["u","t","but a simple majority could change the rule right"],["a","t","Yes, a simple majority in the Senate can change its rules, including the 60-vote rule for cloture, through a parliamentary maneuver known as the \"nuclear option\".\n\nHere's how it generally works:\n1.  **Point of Order**: The majority leader (or another senator) raises a non-debatable point of order, asserting a new interpretation of Senate rules\u2014for instance, that a vote on cloture should require only a simple majority.\n2.  **Presiding Officer's Ruling**: The presiding officer, adhering to established precedent, rules against this new interpretation.\n3.  **Appeal and Simple Majority Vote**: The majority leader appeals the presiding officer's ruling. This appeal can then be overturned by a simple majority vote of the senators.\n\nBy successfully overturning the presiding officer's ruling with a simple majority, the new interpretation becomes the standing precedent, effectively changing the Senate rule without formally amending Rule XXII (which would typically require a two-thirds majority to end debate on a resolution to change the rules).\n\nThis \"nuclear option\" has been used twice in recent history to lower the cloture threshold for presidential nominations: in 2013 for most presidential nominees (except Supreme Court) and in 2017 to include Supreme Court nominees."]]}